{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-testing-4/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"e22f2840-a679-56f8-91f4-f1e4c175cb3a","excerpt":"Golang 测试（四）覆盖率（Coverage）从本质上来讲，测试永远不会完整。没有一个测试数量可以来证明一个包没有 bug…","html":"<h2>Golang 测试（四）</h2>\n<h4>覆盖率（Coverage）</h4>\n<p>从本质上来讲，测试永远不会完整。没有一个测试数量可以来证明一个包没有 bug，它们最多能增加我们对这个包在一些重要的场景范围内正常工作的信心。</p>\n<p>测试集对测试包的执行程度叫做测试覆盖率。覆盖率不能直接量化，但是有一些直观的方法可以帮助我们将测试工作引导到更有用的地方。</p>\n<p>语句覆盖（statement coverage）是最简单和最广泛使用的方式。一个测试集的语句覆盖率是在测试期间至少执行一次的源码语句所占的比例。下面我们使用整合了 go test 的 Go cover 工具来测量语句覆盖率以及帮助识别测试中的明显缺陷。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> eval\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"math\"</span>\n\t<span class=\"token string\">\"testing\"</span>\n\t<span class=\"token string\">\"fmt\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">TestCover</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">var</span> tests <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\t\tinput <span class=\"token builtin\">string</span>\n\t\tenv   Env\n\t\twant  <span class=\"token builtin\">string</span>\n\t<span class=\"token punctuation\">}</span><span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token string\">\"x % 2\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unexpected '%'\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token string\">\"!true\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"unexpected '!'\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token string\">\"log(10)\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token string\">`unknown function \"log\"`</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token string\">\"sqrt(1, 2)\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"call to sqrt has 2 args, want 1\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token string\">\"sqrt(A / pi)\"</span><span class=\"token punctuation\">,</span> Env<span class=\"token punctuation\">{</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">87616</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"pi\"</span><span class=\"token punctuation\">:</span> math<span class=\"token punctuation\">.</span>Pi<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"167\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token string\">\"pow(x, 3) + pow(y, 3)\"</span><span class=\"token punctuation\">,</span> Env<span class=\"token punctuation\">{</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"y\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"1729\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token string\">\"5 / 9 * (F - 32)\"</span><span class=\"token punctuation\">,</span> Env<span class=\"token punctuation\">{</span><span class=\"token string\">\"F\"</span><span class=\"token punctuation\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">40</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"-40\"</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">for</span> <span class=\"token boolean\">_</span><span class=\"token punctuation\">,</span> test <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> tests <span class=\"token punctuation\">{</span>\n\t\texpr<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> <span class=\"token function\">Parse</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">==</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\terr <span class=\"token operator\">=</span> expr<span class=\"token punctuation\">.</span><span class=\"token function\">Check</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span>Var<span class=\"token punctuation\">]</span><span class=\"token builtin\">bool</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">if</span> err<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> test<span class=\"token punctuation\">.</span>want <span class=\"token punctuation\">{</span>\n\t\t\t\tt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: got %q, want %q\"</span><span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">,</span> err<span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">.</span>want<span class=\"token punctuation\">)</span>\n\t\t\t<span class=\"token punctuation\">}</span>\n\t\t\t<span class=\"token keyword\">continue</span>\n\t\t<span class=\"token punctuation\">}</span>\n\n\t\tgot <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.6g\"</span><span class=\"token punctuation\">,</span> expr<span class=\"token punctuation\">.</span><span class=\"token function\">Eval</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">.</span>env<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token keyword\">if</span> got <span class=\"token operator\">!=</span> test<span class=\"token punctuation\">.</span>want <span class=\"token punctuation\">{</span>\n\t\t\tt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s: %v, want %s\"</span><span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">.</span>input<span class=\"token punctuation\">,</span> got<span class=\"token punctuation\">,</span> test<span class=\"token punctuation\">.</span>want<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>先检查测试是否通过</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\"> go <span class=\"token function\">test</span> -v  -run<span class=\"token operator\">=</span>Cover <span class=\"token keyword\">.</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> RUN   TestCover\n--- PASS: TestCover <span class=\"token punctuation\">(</span>0.00s<span class=\"token punctuation\">)</span>\nPASS\nok      _/Users/chao/workspace/go/gopl.io/ch7/eval      0.006s</code></pre></div>\n<p>下面的命令可以查看如何使用 coverage 工具</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">$ <span class=\"token keyword\">go</span> tool cover\nUsage of <span class=\"token string\">'go tool cover'</span><span class=\"token punctuation\">:</span>\nGiven a coverage profile produced by <span class=\"token string\">'go test'</span><span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">go</span> test <span class=\"token operator\">-</span>coverprofile<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>out\n\nOpen a web browser displaying annotated source code<span class=\"token punctuation\">:</span>\n        <span class=\"token keyword\">go</span> tool cover <span class=\"token operator\">-</span>html<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>out\n<span class=\"token operator\">...</span></code></pre></div>\n<p>使用 -coverprofile 参数运行测试</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ go <span class=\"token function\">test</span> -run<span class=\"token operator\">=</span>Cover -coverprofile<span class=\"token operator\">=</span>c.out <span class=\"token keyword\">.</span>\nok      _/Users/chao/workspace/go/gopl.io/ch7/eval      0.006s  coverage: 63.8% of statements</code></pre></div>\n<p>使用 go tool cover 生成 HTML 报告</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">$ <span class=\"token keyword\">go</span> tool cover <span class=\"token operator\">-</span>html<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>out</code></pre></div>\n<p><img src=\"https://s2.ax1x.com/2019/12/06/QGoKxS.png\" alt=\"QGoKxS.png\"></p>","frontmatter":{"title":"Golang 测试（四）","date":"December 05, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-testing-4/","previous":{"fields":{"slug":"/go/golang-testing-3/"},"frontmatter":{"title":"Golang 测试（三）"}},"next":{"fields":{"slug":"/go/golang-testing-5/"},"frontmatter":{"title":"Golang 测试（五）"}}}}}