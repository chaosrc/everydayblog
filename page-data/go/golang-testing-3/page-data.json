{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-testing-3/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"27387e73-7c25-55b4-a913-94b868eaef46","excerpt":"Golang 测试（三）外部测试包net/url 包提供 URL 解析，net/http 包提供 web 服务和 HTTP 客户端库，上层的 net/http 依赖下层的 net/url。然而 net/url 中的一个测试需要在 URLs 和 HTTP 客户端之间交互，也就是说下层包导入了上层包。Q1HbA1.png…","html":"<h2>Golang 测试（三）</h2>\n<h4>外部测试包</h4>\n<p>net/url 包提供 URL 解析，net/http 包提供 web 服务和 HTTP 客户端库，上层的 net/http 依赖下层的 net/url。然而 net/url 中的一个测试需要在 URLs 和 HTTP 客户端之间交互，也就是说下层包导入了上层包。</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/04/Q1HbA1.png\" alt=\"Q1HbA1.png\"></p>\n<p>在 net/url 包中声明这样一个测试函数会导致包循环导入（如上图），在 Go 中禁止循环导入。</p>\n<p>解决这个问题的方法是在一个外部测试包（external test package）中声明这个函数，也就是在 net/url 文件夹中将测试包定义为 pacakge url_test。</p>\n<p>外部测试包被当作一个独立的包。从逻辑上来说，在它依赖的包上提升了一层：</p>\n<p><img src=\"https://s2.ax1x.com/2019/12/04/Q1qYJP.png\" alt=\"Q1qYJP.png\"></p>\n<p>通过 go list 工具可以查看包中的 Go 代码哪些是产品代码，哪些是内部测试代码，以及哪些是外部测试代码。</p>\n<p>查看 fmt 包中的产品代码文件</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ go list -f<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>.GoFiles<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token function\">fmt</span>\n<span class=\"token punctuation\">[</span>doc.go errors.go format.go print.go scan.go<span class=\"token punctuation\">]</span></code></pre></div>\n<p>内部测试代码文件</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ go list -f<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>.TestGoFiles<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token function\">fmt</span>\n<span class=\"token punctuation\">[</span>export_test.go<span class=\"token punctuation\">]</span></code></pre></div>\n<p>外部测试代码文件</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ go list -f<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">{</span>.XTestGoFiles<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span> <span class=\"token function\">fmt</span>\n<span class=\"token punctuation\">[</span>errors_test.go example_test.go fmt_test.go gostringer_example_test.go scan_test.go stringer_example_test.go stringer_test.go<span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"Golang 测试（三）","date":"December 04, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-testing-3/","previous":{"fields":{"slug":"/go/golang-testing-5/"},"frontmatter":{"title":"Golang 测试（五）"}},"next":null}}}