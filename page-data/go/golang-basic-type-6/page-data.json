{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-basic-type-6/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"3d8cf1b4-54dd-5e9d-92bd-4ae670a035fd","excerpt":"Golang 基础数据类型（六）Strings 和 Numbers 之间转换整数转换为字符串有两种方式: fmt.Sprintf 和 strconv.ItoaFormatInt 转换不同进制的整数字符串转整数类型常量常量是在编译时就知道值的表达式，它计算是在编译时而不是运行时。常量的基础类型是：boolean…","html":"<h2>Golang 基础数据类型（六）</h2>\n<h4>Strings 和 Numbers 之间转换</h4>\n<p>整数转换为字符串有两种方式: fmt.Sprintf 和 strconv.Itoa</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">i <span class=\"token operator\">:=</span> <span class=\"token number\">10</span>\ns1 <span class=\"token operator\">:=</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span>\ns2 <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Itoa</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span>   <span class=\"token comment\">// 10, 10</span></code></pre></div>\n<p>FormatInt 转换不同进制的整数</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">// 1010</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>strconv<span class=\"token punctuation\">.</span><span class=\"token function\">FormatInt</span><span class=\"token punctuation\">(</span><span class=\"token number\">63</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">//3f</span></code></pre></div>\n<p>字符串转整数类型</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">x<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">Atoi</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">)</span>\ny<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> strconv<span class=\"token punctuation\">.</span><span class=\"token function\">ParseInt</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"123\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>常量</h4>\n<p>常量是在编译时就知道值的表达式，它计算是在编译时而不是运行时。常量的基础类型是：boolean, string 或 number 类型</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">const</span> pi <span class=\"token operator\">=</span> <span class=\"token number\">3.1415</span></code></pre></div>\n<p>常量的声明可以省略类型，类型由右边的表达式推断</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">const</span> delay time<span class=\"token punctuation\">.</span>Duration <span class=\"token operator\">=</span> <span class=\"token number\">100</span>\n<span class=\"token keyword\">const</span> timeout <span class=\"token operator\">=</span> time<span class=\"token punctuation\">.</span>Minute <span class=\"token operator\">*</span> <span class=\"token number\">5</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T, %[1]v\\n\"</span><span class=\"token punctuation\">,</span> delay<span class=\"token punctuation\">)</span>  <span class=\"token comment\">// time.Duration, 100ns</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%T, %[1]v\\n\"</span><span class=\"token punctuation\">,</span> timeout<span class=\"token punctuation\">)</span> <span class=\"token comment\">// time.Duration, 5m0s</span></code></pre></div>\n<p>当一个连续的常量声明做为一个组时，如果除了第一个以外其他的省略右边的表达式，隐含后面的常量使用前面的表达式</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n\ta <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\tb \n\td <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n\te \n<span class=\"token punctuation\">)</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 1 1 2 2</span></code></pre></div>\n<h4>常量生成器 iota</h4>\n<p>常量的声明可以使用常量生成器 iota，用来生成一系列相关的值。在常量声明中，iota 的值从 0 开始每次增加 1。比如定义工作日</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n\tSunday <span class=\"token operator\">=</span> <span class=\"token boolean\">iota</span>\n\tMonday\n\tTuesday\n\tWednesday\n\tThursday\n\tFriday\n\tSaturday\n<span class=\"token punctuation\">)</span> </code></pre></div>\n<p>Sunday 的值为 0，Saturday 的值为 6。这种方式的常量类似于其他语言中的枚举值</p>\n<p>iota 用于表达式</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n\ta <span class=\"token operator\">=</span> <span class=\"token number\">10</span> <span class=\"token operator\">*</span> <span class=\"token boolean\">iota</span>\n\tb\n\tc\n\td\n<span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Golang 基础数据类型（六）","date":"October 20, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-basic-type-6/","previous":{"fields":{"slug":"/go/golang-basic-type-5/"},"frontmatter":{"title":"Golang 基础数据类型（五）"}},"next":null}}}