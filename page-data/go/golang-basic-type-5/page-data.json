{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-basic-type-5/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"56765b42-d2ce-5b42-819b-066d37bc0c22","excerpt":"Golang 基础数据类型（五）Strings 和 Byte 操作操作字符串最重要的四个包：bytes、strings、strconv 和 unicode。strings 包提供了很多对字符串比如搜索、替换、比较、分隔的方法bytes 包有操作字节数组的类似方法，和 strings 共享一些属性。因为 strings…","html":"<h2>Golang 基础数据类型（五）</h2>\n<h4>Strings 和 Byte 操作</h4>\n<p>操作字符串最重要的四个包：bytes、strings、strconv 和 unicode。strings 包提供了很多对字符串比如搜索、替换、比较、分隔的方法</p>\n<p>bytes 包有操作字节数组的类似方法，和 strings 共享一些属性。因为 strings 类型是不可变类型，随着 strings 构建的增加可能会导致大量的内存分配和拷贝，这种情况下使用 bytes.Buffer 类型更加高效</p>\n<p>strconv 提供了布尔类型、整数类型以及浮点类型值与字符串的相互转换的方法</p>\n<p>unicode 包提供了分类 rune 类型的方法比如 IsDigit, IsLetter, IsUpper, IsLower</p>\n<p>下面的例子，将一个整数的字符串每隔三个位置插入一个逗号分隔符，比如 “12345”，转换为 “12,345”</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">format</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"12345\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n\tl <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> l <span class=\"token operator\">&lt;</span> <span class=\"token number\">3</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> s\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token function\">format</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>l<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">\",\"</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span>l<span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>strings 和 byte 之间相互转换</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">conv</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\ts <span class=\"token operator\">:=</span> <span class=\"token string\">\"hello\"</span>\n\tb <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token function\">byte</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\ts2 <span class=\"token operator\">:=</span> <span class=\"token function\">string</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token comment\">//输出：[104 101 108 108 111] hello</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>[]byte(s) 和 string(b) 的转换都会复制一份新的字节数组</p>\n<p>bytes 包中提供了 Buffer 类型能够高效的操作 byte 数据</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">intsToString</span><span class=\"token punctuation\">(</span>values <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n\tbuf <span class=\"token operator\">:=</span> bytes<span class=\"token punctuation\">.</span>Buffer<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\n\tbuf<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"[\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> value <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> values <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> i <span class=\"token operator\">></span> <span class=\"token number\">0</span> <span class=\"token punctuation\">{</span>\n\t\t\tbuf<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\", \"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t\t\n\t\tbuf<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span>fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tbuf<span class=\"token punctuation\">.</span><span class=\"token function\">WriteString</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"]\"</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">return</span> buf<span class=\"token punctuation\">.</span><span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">intsToString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">5</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 输出：[1, 2, 3, 4, 5]</span></code></pre></div>","frontmatter":{"title":"Golang 基础数据类型（五）","date":"October 19, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-basic-type-5/","previous":{"fields":{"slug":"/go/golang-basic-type-4/"},"frontmatter":{"title":"Golang 基础数据类型（四）"}},"next":{"fields":{"slug":"/go/golang-basic-type-6/"},"frontmatter":{"title":"Golang 基础数据类型（六）"}}}}}