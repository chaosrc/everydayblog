{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-composite-type-2/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"4d6f2a5f-d34c-5cea-8d6e-a8def68847ef","excerpt":"Golang 复合类型（二）SliceSlice 是每个元素具有相同类型的可变长度序列，slice 写做 []T，其中 T 为元素类型，看上去和没有长度的数组很像slice 由三部分组成：指针、长度和容量。指针指向 slice 能够接触到的第一个数组元素。长度是 slice…","html":"<h2>Golang 复合类型（二）</h2>\n<h4>Slice</h4>\n<p>Slice 是每个元素具有相同类型的可变长度序列，slice 写做 []T，其中 T 为元素类型，看上去和没有长度的数组很像</p>\n<p>slice 由三部分组成：指针、长度和容量。指针指向 slice 能够接触到的第一个数组元素。长度是 slice 元素的数量，但是不能超过容量值。容量是 slice 底层数组的长度。内置的 cap 函数返回容量大小</p>\n<p>多个 slice 可以用共享同一个底层数组。下面声明一个月份数组</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">months <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"January\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"February\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token number\">3</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"March\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"April\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"May\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token number\">6</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"June\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"July\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"August\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token number\">9</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"September\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"October\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"November\"</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token number\">12</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"December\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>slice 操作 s[i:j] 创建一个新的 slice 指向 s 的 i 到 j-1 序列，其中 s 可以是一个数组变量、数组指针或者另一个 slice</p>\n<p>对上面的月份数组进行 slice 操作</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">Q2 <span class=\"token operator\">:=</span> months<span class=\"token punctuation\">[</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span>\nsummer <span class=\"token operator\">:=</span> months<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span>\n\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s len: %d, cap: %d\\n\"</span><span class=\"token punctuation\">,</span> Q2<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>Q2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span>Q2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%s len: %d, cap: %d\\n\"</span><span class=\"token punctuation\">,</span> summer<span class=\"token punctuation\">,</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>summer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cap</span><span class=\"token punctuation\">(</span>summer<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">[April May June] len: 3, cap: 9\n[June July August] len: 3, cap: 7</code></pre></div>\n<p><img src=\"https://s2.ax1x.com/2019/10/22/KGffqf.png\"></p>\n<p>slice 超出容量 cap(s) 会导致错误，但是 slice 超过长度 len(s) 则会扩展 slice</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>Q2<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// [April May June July August]</span></code></pre></div>\n<p>因为 slice 包含数组元素的指针，因此将 slice 传人函数时允许函数修改底层的数组。下面的函数将一个数组反转</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>s <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tl <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> l<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n\t\ts<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span>l<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> s<span class=\"token punctuation\">[</span>l<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tli <span class=\"token operator\">:=</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">}</span>\n\t<span class=\"token function\">reverse</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>li<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [5 4 3 2 1]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>与数组不同，slice 不能比较，因此不能使用 == 来比较两个 slice 是否具有相同的元素</p>\n<p>slice 的零值为 nil。一个 nil 的 slice 没有底层的数组，它的长度和容量都为 0，但同时也存在 non-nil 的 slice 长度和容量也为 0 ，比如 []int{} 或 make([]int, 3)[3:]</p>\n<p>如果要测试一个 slice 是否为空，使用 len(s) == 0 而不是 s == nil，其他情况下 nil slice 的表现和长度为 0 的 slice 一样</p>\n<p>内置的 make 方法可以创建一个指定类型、长度和容量的 slice，容量参数可以省略，省略时容量和长度相等</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">)</span>\n<span class=\"token function\">make</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Golang 复合类型（二）","date":"October 22, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-composite-type-2/","previous":{"fields":{"slug":"/go/golang-composite-type-1/"},"frontmatter":{"title":"Golang 复合类型（一）"}},"next":null}}}