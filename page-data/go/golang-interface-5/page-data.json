{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-interface-5/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"f75d5075-6131-526c-9aac-164bde1675ca","excerpt":"Golang 接口（五）http.Handler 接口net/http 包可以用来实现 web 客户端和服务端，服务端的基本接口为 http.Handler:ListenAndServe 方法需要一个服务器地址(比如“localhost:8000”)和一个 Handler…","html":"<h2>Golang 接口（五）</h2>\n<h4>http.Handler 接口</h4>\n<p>net/http 包可以用来实现 web 客户端和服务端，服务端的基本接口为 http.Handler:</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> http\n\n<span class=\"token keyword\">type</span> Handler <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">ServeHTTP</span><span class=\"token punctuation\">(</span>ResponseWriter<span class=\"token punctuation\">,</span> <span class=\"token operator\">*</span>Request<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span>addr <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> handler Handler<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> </code></pre></div>\n<p>ListenAndServe 方法需要一个服务器地址(比如“localhost:8000”)和一个 Handler 接口的实例，所有请求都会被发送到这个 handler。</p>\n<p>下面实现一个简单的 web 服务，模拟展示数据库中物品的销售价格。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// 定义价格类型</span>\n<span class=\"token keyword\">type</span> price <span class=\"token builtin\">float64</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p price<span class=\"token punctuation\">)</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Sprintf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.2f¥\"</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 使用 map 模拟数据库</span>\n<span class=\"token keyword\">type</span> database <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">float64</span>\n\n<span class=\"token comment\">// 定义 http.Handler 接口</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>db database<span class=\"token punctuation\">)</span> <span class=\"token function\">ServeHTTP</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> val <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> db <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s：%s\\n\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdb <span class=\"token operator\">:=</span> database<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"shoe\"</span><span class=\"token punctuation\">:</span>  <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"socks\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalln</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost:8001\"</span><span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>访问 localhost:8001</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ curl localhost:8001\nshoe：100.00¥\nsocks：5.00¥</code></pre></div>\n<p>给服务添加不同的 URL 来触发不同的行为，<code class=\"language-text\">/list</code> 和现在一样返回所有的商品和价格， <code class=\"language-text\">/price</code> 通过 item 参数返回单个商品的价格</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// 定义 http.Handler 接口</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>db database<span class=\"token punctuation\">)</span> <span class=\"token function\">ServeHTTP</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tpath <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span>Path\n\t<span class=\"token keyword\">switch</span> path <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"/list\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> val <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> db <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s：%s\\n\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">case</span> <span class=\"token string\">\"/price\"</span><span class=\"token punctuation\">:</span>\n\t\t<span class=\"token comment\">// 获取 URL 参数 item</span>\n\t\titem <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item\"</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token comment\">// 在 db 中查询数据，如果不存在返回错误</span>\n\t\t<span class=\"token keyword\">if</span> value<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> db<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">{</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\t\tw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusNotFound<span class=\"token punctuation\">)</span>\n\t\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"no such item: %s\\n\"</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n\t\tw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusNotFound<span class=\"token punctuation\">)</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"no such page: %s\\n\"</span><span class=\"token punctuation\">,</span> path<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>访问服务</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ curl localhost:8001\nno such page: /\n$ curl localhost:8001/list\nshoe：100.00¥\nsocks：5.00¥\n$ curl localhost:8001/price?item=shoe\n100.00¥\n$ curl localhost:8001/price?item=hat\nno such item: hat</code></pre></div>\n<p>随着 URL 情况的增加以及逻辑越来越复杂，在实际的应用中将每一种情况的逻辑分别定义在不同的方法中是非常有必要的。net/http 包中提供了的 ServeMux（多路器）来简化 URL  与 handler 之间的关系。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tdb <span class=\"token operator\">:=</span> database<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token string\">\"shoe\"</span><span class=\"token punctuation\">:</span>  <span class=\"token number\">100</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token string\">\"socks\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tmux <span class=\"token operator\">:=</span> http<span class=\"token punctuation\">.</span><span class=\"token function\">NewServeMux</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\tmux<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/list\"</span><span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>list<span class=\"token punctuation\">)</span>\n\tmux<span class=\"token punctuation\">.</span><span class=\"token function\">HandleFunc</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/price\"</span><span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">.</span>price<span class=\"token punctuation\">)</span>\n\n    log<span class=\"token punctuation\">.</span><span class=\"token function\">Fatalln</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span><span class=\"token function\">ListenAndServe</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost:8001\"</span><span class=\"token punctuation\">,</span> db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 使用 map 模拟数据库</span>\n<span class=\"token keyword\">type</span> database <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">float64</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>db database<span class=\"token punctuation\">)</span> <span class=\"token function\">list</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">for</span> key<span class=\"token punctuation\">,</span> val <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> db <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s：%s\\n\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">,</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span>val<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>db database<span class=\"token punctuation\">)</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span>w http<span class=\"token punctuation\">.</span>ResponseWriter<span class=\"token punctuation\">,</span> r <span class=\"token operator\">*</span>http<span class=\"token punctuation\">.</span>Request<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token comment\">// 获取 URL 参数 item</span>\n\titem <span class=\"token operator\">:=</span> r<span class=\"token punctuation\">.</span>URL<span class=\"token punctuation\">.</span><span class=\"token function\">Query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">Get</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"item\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token comment\">// 在 db 中查询数据，如果不存在返回错误</span>\n\t<span class=\"token keyword\">if</span> value<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> db<span class=\"token punctuation\">[</span>item<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">{</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"%s\\n\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">price</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\tw<span class=\"token punctuation\">.</span><span class=\"token function\">WriteHeader</span><span class=\"token punctuation\">(</span>http<span class=\"token punctuation\">.</span>StatusNotFound<span class=\"token punctuation\">)</span>\n\t\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Fprintf</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> <span class=\"token string\">\"no such item: %s\\n\"</span><span class=\"token punctuation\">,</span> item<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Golang 接口（五）","date":"November 10, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-interface-5/","previous":{"fields":{"slug":"/go/golang-interface-4/"},"frontmatter":{"title":"Golang 接口（四）"}},"next":{"fields":{"slug":"/go/golang-interface-6/"},"frontmatter":{"title":"Golang 接口（六）"}}}}}