{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-basic-type-3/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"a1263848-a830-5ba3-a956-50f6efb5c679","excerpt":"Golang 基础数据类型（三）Strings字符串是不可变的字节数列。Strings 可以包含任意的数据，包括值为 0 的字节，但是通常是包含人类可读的文本。文本字符串被解析为 UTF-8 编码的 Unicode 代码点（runes）内置的 len 方法返回的是字符串的字节数为不是 runes 类型，下标操作 si…","html":"<h2>Golang 基础数据类型（三）</h2>\n<h4>Strings</h4>\n<p>字符串是不可变的字节数列。Strings 可以包含任意的数据，包括值为 0 的字节，但是通常是包含人类可读的文本。文本字符串被解析为 UTF-8 编码的 Unicode 代码点（runes）</p>\n<p>内置的 len 方法返回的是字符串的字节数为不是 runes 类型，下标操作 s[i] 检索的是 s 的第 i 个字节</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">s <span class=\"token operator\">:=</span> <span class=\"token string\">\"hello,wold\"</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 10</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 104 111</span>\n\nf <span class=\"token operator\">:=</span> <span class=\"token string\">\"hello,世界\"</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>     <span class=\"token comment\">// 12</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">[</span><span class=\"token number\">7</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 104 184</span></code></pre></div>\n<p>截取子字符串的操作 s[i:j] 产生一个 i 到 j 的新字符串，包含第 i 个字节，但是不包括第 j 个</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// hello</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//hello</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">//,wold</span></code></pre></div>\n<p>使用加号可以连结两个字符串产生一个新的字符串</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"my\"</span> <span class=\"token operator\">+</span> s<span class=\"token punctuation\">[</span><span class=\"token number\">5</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// my,wold</span></code></pre></div>\n<p>字符串可以使用比如 == 和 &#x3C; 等进行比较，这种比较是通过字节与字节进行比较</p>\n<h4>字符串字面量</h4>\n<p>一个字符串的值可以通过字面量来写。因为 Go 的源码文件总是使用 UTF-8 ，Go 文本字符串解析为 UTF-8，我们能够在字符串中包含 Unicode 代码点</p>\n<p>在双引号字符串字面量中，转义序列以反斜杠 \\ 开始，能够插入任意字节的值，比如 <code class=\"language-text\">\\a</code>, <code class=\"language-text\">\\t</code>, <code class=\"language-text\">\\n</code>。也可以包括十六进制和八进制转义</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\a,\\b,\\f,\\n,\\r,\\t,\\v,\\\",\\\\\"</span><span class=\"token punctuation\">)</span>\nfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\xaf,\\377\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>原始字符串使用反引号 `…` 来书写。原始字符串中的内容不会被转义</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span><span class=\"token string\">`\n\t 1. abc\n\t 2. efg\n\t 3. hij\n    `</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>输出原始字符串</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">    1. abc\n    2. efg\n    3. hij</code></pre></div>","frontmatter":{"title":"Golang 基础数据类型（三）","date":"October 17, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-basic-type-3/","previous":{"fields":{"slug":"/go/golang-baisc-type-2/"},"frontmatter":{"title":"Golang 基础数据类型（二）"}},"next":{"fields":{"slug":"/go/golang-basic-type-4/"},"frontmatter":{"title":"Golang 基础数据类型（四）"}}}}}