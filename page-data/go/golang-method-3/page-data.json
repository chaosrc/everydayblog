{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-method-3/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"67d7ccc8-38ca-5518-9d41-c86960ba5028","excerpt":"Golang 方法（三）方法值和表达式通常我们在同一个表达式中选择并调用方法，比如 ，但是这两个操作是可以分开的。选择器  生成了一个方法值，这个函数将方法（p.Distance）绑定到特定的 receiver 值 p 。然后可以调用这个函数而不需要 receiver 值，只需要非recevier…","html":"<h2>Golang 方法（三）</h2>\n<h4>方法值和表达式</h4>\n<p>通常我们在同一个表达式中选择并调用方法，比如 <code class=\"language-text\">p.Distance()</code>，但是这两个操作是可以分开的。选择器 <code class=\"language-text\">p.Distance</code> 生成了一个方法值，这个函数将方法（p.Distance）绑定到特定的 receiver 值 p 。然后可以调用这个函数而不需要 receiver 值，只需要非recevier 的参数。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tp <span class=\"token operator\">:=</span> geometry<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n\tq <span class=\"token operator\">:=</span> geometry<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 方法值</span>\n\tdistance <span class=\"token operator\">:=</span> p<span class=\"token punctuation\">.</span>Distance\n    <span class=\"token comment\">//调用方法值</span>\n    d <span class=\"token operator\">:=</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2.8284271247461903</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>与方法值相关的是方法表达式。当调用一个方法，而不是原始函数时，我们必须使用选择器语法这种特定的方式来提供 receiver。一个方法表达式写做 T.f 或 (*T).f (T 是一个类型)，产生一个函数值，其第一个常规参数取代 receiver，所以它可以使用正常方式调用</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tp <span class=\"token operator\">:=</span> geometry<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">}</span>\n\tq <span class=\"token operator\">:=</span> geometry<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">}</span>\n    <span class=\"token comment\">// 方法表达式</span>\n    distance <span class=\"token operator\">:=</span> geometry<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">.</span>Distance\n    <span class=\"token comment\">// 调用方法</span>\n\td <span class=\"token operator\">:=</span> <span class=\"token function\">distance</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span> <span class=\"token comment\">// 2.8284271247461903</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>当我们需要在不同条件下来选择类型中的不同方法来对多个receiver 执行时，方法表达式就非常有用</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// pacakge geometry</span>\n\n<span class=\"token comment\">//Add 相加</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p Point<span class=\"token punctuation\">)</span> <span class=\"token function\">Add</span><span class=\"token punctuation\">(</span>q Point<span class=\"token punctuation\">)</span> Point <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> Point<span class=\"token punctuation\">{</span>p<span class=\"token punctuation\">.</span>X <span class=\"token operator\">+</span> q<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Y <span class=\"token operator\">+</span> q<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">//Substract 相减</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p Point<span class=\"token punctuation\">)</span> <span class=\"token function\">Substract</span><span class=\"token punctuation\">(</span>q Point<span class=\"token punctuation\">)</span> Point <span class=\"token punctuation\">{</span><span class=\"token keyword\">return</span> Point<span class=\"token punctuation\">{</span>p<span class=\"token punctuation\">.</span>X<span class=\"token operator\">-</span>q<span class=\"token punctuation\">.</span>X<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">.</span>Y<span class=\"token operator\">-</span>q<span class=\"token punctuation\">.</span>Y<span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">type</span> Path <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>Point\n<span class=\"token comment\">// Transition 移动</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>p Path<span class=\"token punctuation\">)</span> <span class=\"token function\">Transition</span><span class=\"token punctuation\">(</span>offset Point<span class=\"token punctuation\">,</span> add <span class=\"token builtin\">bool</span><span class=\"token punctuation\">)</span> Path <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> op <span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>Point<span class=\"token punctuation\">,</span> Point<span class=\"token punctuation\">)</span> Point\n    \n\t<span class=\"token keyword\">if</span> add <span class=\"token punctuation\">{</span>\n\t\top <span class=\"token operator\">=</span> Point<span class=\"token punctuation\">.</span>Add\n\t<span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n\t\top <span class=\"token operator\">=</span> Point<span class=\"token punctuation\">.</span>Substract\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> point <span class=\"token operator\">:=</span> <span class=\"token keyword\">range</span> p <span class=\"token punctuation\">{</span>\n\t\tp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token function\">op</span><span class=\"token punctuation\">(</span>point<span class=\"token punctuation\">,</span> offset<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> p\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\toffset <span class=\"token operator\">:=</span> geometry<span class=\"token punctuation\">.</span>Point<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">}</span>\n\tpath <span class=\"token operator\">:=</span> geometry<span class=\"token punctuation\">.</span>Path<span class=\"token punctuation\">{</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token number\">4</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t\t<span class=\"token punctuation\">{</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span><span class=\"token number\">6</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\tpath <span class=\"token operator\">=</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">Transition</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span>\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span> <span class=\"token comment\">// [{0 2} {2 4} {4 6}]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>上面 Transition 方法中的 op 变量既可以是 Point 类型的 Add 方法也可以是 Substract 方法。</p>","frontmatter":{"title":"Golang 方法（三）","date":"November 04, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-method-3/","previous":{"fields":{"slug":"/go/golang-method-2/"},"frontmatter":{"title":"Golang 方法（二）"}},"next":null}}}