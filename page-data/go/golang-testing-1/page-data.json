{"componentChunkName":"component---src-templates-blog-post-js","path":"/go/golang-testing-1/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"56bae759-ab3f-5135-9d6b-a213af244bd2","excerpt":"Golang 测试（一）go test 工具go test 子命令是 Go 包的一个测试驱动。在一个包目录中，以 _test.go 结尾的文件不是 go build 构建的包的一部分，而是 go test 构建的包的一部分。在 *_test.go 文件中， 有三种特殊的函数： tests、benchmarks…","html":"<h2>Golang 测试（一）</h2>\n<h4>go test 工具</h4>\n<p>go test 子命令是 Go 包的一个测试驱动。在一个包目录中，以 _test.go 结尾的文件不是 go build 构建的包的一部分，而是 go test 构建的包的一部分。</p>\n<p>在 *_test.go 文件中， 有三种特殊的函数： tests、benchmarks 和 examples。测试函数是名称以 Test 开头的函数，测试程序逻辑是否正确。go test 调用测试函数并报告成功或失败的结果。benchmarks 函数是以名称 Benchark 开头的函数，用来测量某些操作的性能，go test 报告操作的平均执行时间。example 函数，以 Example 开头，提供机器检查的文档。</p>\n<p>go test 工具扫描 *_test.go 文件的这些特殊方法，生成一个临时的 main 包，编译运行，报告结果，然后再把它们清理掉。</p>\n<h4>Test 函数</h4>\n<p>每个测试文件必须导入 testing 包，测试函数具有以下签名：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">TestName</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">//...</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>测试函数名以 Test 开头，后缀 <em>Name</em> 必须以大写字母开头：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">TestSin</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">TestCos</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">TestLog</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span></code></pre></div>\n<p>参数 t 提供了报告测试失败和打印额外信息的函数。下面是一个 word 包，包含一个方法 IsPalindrome ：检查一个字符串是否向前和向后读是一样的。</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// 文件：word.go</span>\n<span class=\"token keyword\">package</span> word\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">IsPalindome</span><span class=\"token punctuation\">(</span>s <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">{</span>\n\tlastIndex <span class=\"token operator\">:=</span> <span class=\"token function\">len</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">1</span>\n\t<span class=\"token keyword\">for</span> i <span class=\"token operator\">:=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> lastIndex<span class=\"token operator\">/</span><span class=\"token number\">2</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">if</span> s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!=</span> s<span class=\"token punctuation\">[</span>lastIndex<span class=\"token operator\">-</span>i<span class=\"token punctuation\">]</span> <span class=\"token punctuation\">{</span>\n\t\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n\t\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">true</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token comment\">// 文件: word_test.go</span>\n<span class=\"token keyword\">package</span> word\n\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"testing\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">TestPalindrome</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token function\">IsPalindome</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"detartrated\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tt<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">`IsPalindome(\"detartrated\") = false`</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span><span class=\"token function\">IsPalindome</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"kayak\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tt<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">`IsPalindome(\"kayak\") = false`</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">TestNonPalindrome</span><span class=\"token punctuation\">(</span>t <span class=\"token operator\">*</span>testing<span class=\"token punctuation\">.</span>T<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token function\">IsPalindome</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"palindrome\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t\tt<span class=\"token punctuation\">.</span><span class=\"token function\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">`IsPalindome(\"palindrome\") = true`</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>运行</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ go <span class=\"token function\">test</span>\nPASS\nok      example.com/hello/test/word     0.004s</code></pre></div>\n<p>使用 -v 参数打印每个测试的名字和执行时间</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ go <span class=\"token function\">test</span> -v\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> RUN   TestPalindrome\n--- PASS: TestPalindrome <span class=\"token punctuation\">(</span>0.00s<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> RUN   TestNonPalindrome\n--- PASS: TestNonPalindrome <span class=\"token punctuation\">(</span>0.00s<span class=\"token punctuation\">)</span>\nPASS\nok      example.com/hello/test/word     0.004s</code></pre></div>\n<p>-run 参数使用正则表达式来匹配需要运行的测试</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">$ go <span class=\"token function\">test</span> -run<span class=\"token operator\">=</span><span class=\"token string\">\"Non|Franch\"</span> -v\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> RUN   TestNonPalindrome\n--- PASS: TestNonPalindrome <span class=\"token punctuation\">(</span>0.00s<span class=\"token punctuation\">)</span>\n<span class=\"token operator\">==</span><span class=\"token operator\">=</span> RUN   TestFranchPalindrome\n--- FAIL: TestFranchPalindrome <span class=\"token punctuation\">(</span>0.00s<span class=\"token punctuation\">)</span>\n    word_test.go:25: IsPalindome<span class=\"token punctuation\">(</span><span class=\"token string\">\"été\"</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token boolean\">false</span>\nFAIL\n<span class=\"token keyword\">exit</span> status 1\nFAIL    example.com/hello/test/word     0.004s</code></pre></div>","frontmatter":{"title":"Golang 测试（一）","date":"December 02, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go/golang-testing-1/","previous":{"fields":{"slug":"/go/golang-concurrency-5/"},"frontmatter":{"title":"Golang 共享变量并发（五）"}},"next":{"fields":{"slug":"/go/golang-testing-2/"},"frontmatter":{"title":"Golang 测试（二）"}}}}}