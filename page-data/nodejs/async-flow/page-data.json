{"componentChunkName":"component---src-templates-blog-post-js","path":"/nodejs/async-flow/","webpackCompilationHash":"692ee2b79c26dd6d5a8a","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"293c801f-7184-53dd-8363-e02e71975600","excerpt":"Node.js的异步流程控制以及串行流程的实现在异步程序的执行过程中，有些任务可能随时发生，根程序中其他部分在做什么没关系，什么时候做这些任务都不会出问题。但是也有一些任务只能在某些特定的任务之前或之后执行Node.js…","html":"<h2>Node.js的异步流程控制以及串行流程的实现</h2>\n<blockquote>\n<p>在异步程序的执行过程中，有些任务可能随时发生，根程序中其他部分在做什么没关系，什么时候做这些任务都不会出问题。但是也有一些任务只能在某些特定的任务之前或之后执行</p>\n</blockquote>\n<p>Node.js 中有两类异步流程控制：<strong>串行</strong>和<strong>并行</strong></p>\n<p>串行流程\n<img src=\"https://s2.ax1x.com/2019/06/29/ZQEBI1.png\"></p>\n<p>并行流程\n<img src=\"https://s2.ax1x.com/2019/06/29/ZQElan.png\"></p>\n<p>串行的异步流程形式上和同步逻辑类似，但是每个任务都是异步执行的</p>\n<h4>串行流程的实现</h4>\n<p>使用串行流程实现以下功能：</p>\n<ul>\n<li>从文件中读取 RSS 源</li>\n<li>下载 RSS 源数据</li>\n<li>展示 RSS 预定源中的标题和 URL</li>\n</ul>\n<p>创建项目并安装<code class=\"language-text\">request</code>、<code class=\"language-text\">htmlparser</code>依赖</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> init -y\n$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> --save request request-promise htmlparser</code></pre></div>\n<p>创建 RSS 预定源文件</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token keyword\">echo</span> <span class=\"token string\">'http://blog.nodejs.org/feed'</span> <span class=\"token operator\">>></span> rss.txt</code></pre></div>\n<p>引人依赖</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"fs\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>promises\n<span class=\"token keyword\">const</span> request <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"request-promise\"</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> htmlparser <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"htmlparser\"</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>检查 RSS 文件是否存在</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 检查文件是否存在</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">checkRSSFile</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> stat <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">stat</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> stat<span class=\"token punctuation\">.</span><span class=\"token function\">isFile</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>从 RSS 源文件中随机读取一个 RSS 源</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 从RSS源文件中随机读取一个RSS源</span>\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">readRSS</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">path</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">readFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> rssList <span class=\"token operator\">=</span> text<span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\"</span><span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">const</span> random <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">floor</span><span class=\"token punctuation\">(</span>Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> rssList<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> rssList<span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">trim</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>获取 RSS 源数据</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">downloadRSS</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">url</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">request</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">return</span> res\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>解析 RSS 源数据</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">parseRSSHTML</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">html</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> handler <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">htmlparser<span class=\"token punctuation\">.</span>RssHandler</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> parse <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">htmlparser<span class=\"token punctuation\">.</span>Parser</span><span class=\"token punctuation\">(</span>handler<span class=\"token punctuation\">)</span>\n\n  parse<span class=\"token punctuation\">.</span><span class=\"token function\">parseComplete</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>handler<span class=\"token punctuation\">.</span>dom<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"No RSS item\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">let</span> item <span class=\"token operator\">=</span> handler<span class=\"token punctuation\">.</span>dom<span class=\"token punctuation\">.</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">shift</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span>\n  console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">.</span>link<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>前面的每一个<code class=\"language-text\">async</code>方法都是异步执行的</p>\n<p>通过<code class=\"language-text\">await</code>来串行执行异步函数</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">let</span> path <span class=\"token operator\">=</span> <span class=\"token string\">\"./rss.txt\"</span>\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> isFile <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">checkRSSFile</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isFile<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>path<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> no file`</span></span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token keyword\">const</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">readRSS</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">const</span> html <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">downloadRSS</span><span class=\"token punctuation\">(</span>url<span class=\"token punctuation\">)</span>\n\n    <span class=\"token keyword\">await</span> <span class=\"token function\">parseRSSHTML</span><span class=\"token punctuation\">(</span>html<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>执行结果</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node index.js\n<span class=\"token operator\">!</span><span class=\"token punctuation\">[</span>CDATA<span class=\"token punctuation\">[</span>Node v12.5.0 <span class=\"token punctuation\">(</span>Current<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span>\nhttps://nodejs.org/en/blog/release/v12.5.0 </code></pre></div>\n<p>获取到了RSS源(<a href=\"http://blog.nodejs.org/feed\">http://blog.nodejs.org/feed</a>)数据并展示了其中的第一条数据</p>\n<p>下一篇演示并行流程</p>","frontmatter":{"title":"Node.js的异步流程控制以及串行流程的实现","date":"July 28, 2019","description":"Node.js的异步流程控制以及串行流程的实现"}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/nodejs/async-flow/","previous":{"fields":{"slug":"/nodejs/aysnc-program-event/"},"frontmatter":{"title":"Node.js异步编程之事件监听"}},"next":null}}}