{"componentChunkName":"component---src-templates-blog-post-js","path":"/nodejs/nodejs-understand-express/","webpackCompilationHash":"eb9b7fa042d48e7c3b06","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"5d877797-d8b8-53ef-ba9d-d947a8412dcc","excerpt":"Node.js Web 之深入了解 express 框架express 是 Node.js 中最流行的 Web 框架，使用起来很简单但是功能强大。生成 express 程序 是一个 express 程序生成器，安装完成后可通过  查看其功能生成 shoutbox…","html":"<h2>Node.js Web 之深入了解 express 框架</h2>\n<p>express 是 Node.js 中最流行的 Web 框架，使用起来很简单但是功能强大。</p>\n<h4>生成 express 程序</h4>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ sudo npm install -g express-generator</code></pre></div>\n<p><code class=\"language-text\">express-generator</code> 是一个 express 程序生成器，安装完成后可通过 <code class=\"language-text\">express --help</code> 查看其功能</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">$ express --help\n\n  Usage: express [options] [dir]\n\n  Options:\n\n        --version        output the version number\n    -e, --ejs            add ejs engine support\n        --pug            add pug engine support\n        --hbs            add handlebars engine support\n    -H, --hogan          add hogan.js engine support\n    -v, --view &lt;engine&gt;  add view &lt;engine&gt; support (dust|ejs|hbs|hjs|jade|pug|twig|vash) (defaults to jade)\n        --no-view        use static html instead of view engine\n    -c, --css &lt;engine&gt;   add stylesheet &lt;engine&gt; support (less|stylus|compass|sass) (defaults to plain css)\n        --git            add .gitignore\n    -f, --force          force on non-empty directory\n    -h, --help           output usage information</code></pre></div>\n<p>生成 shoutbox 项目 </p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ express -e shoutbox</code></pre></div>\n<p>项目结构</p>\n<div class=\"gatsby-highlight\" data-language=\"sh\"><pre class=\"language-sh\"><code class=\"language-sh\">shoutbox/\n├── app.js\n├── bin\n│   └── www\n├── package.json\n├── public\n│   ├── images\n│   ├── javascripts\n│   └── stylesheets\n│       └── style.css\n├── routes\n│   ├── index.js\n│   └── users.js\n└── views\n    ├── error.ejs\n    └── index.ejs</code></pre></div>\n<h4>项目实践</h4>\n<p>通过实现一个在线留言版服务来熟悉 express 开发，功能规划如下：</p>\n<ul>\n<li>用户可登陆、注册、退出</li>\n<li>用户可以发送信息</li>\n<li>在页面中分页浏览线留言版条目</li>\n<li>简单的认证功能</li>\n</ul>\n<p>通过这些需求可以初步定义项目需要的路由，如下：</p>\n<ul>\n<li>GET /entries: 获取条目列表</li>\n<li>GET /entries/page: 获取单条条目</li>\n<li>POST /entries/create: 创建条目</li>\n<li>POST /login: 登陆</li>\n<li>POST /logout： 退出</li>\n<li>POST /register：注册</li>\n</ul>\n<p>下一步将使用 express 框架实现这些功能</p>","frontmatter":{"title":"Node.js Web 之深入了解 express 框架","date":"July 12, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/nodejs/nodejs-understand-express/","previous":{"fields":{"slug":"/nodejs/nodejs-understand-connect-2/"},"frontmatter":{"title":"Node.js Web 之深入了解 Connect 中间件（二）"}},"next":{"fields":{"slug":"/nodejs/express-view-render/"},"frontmatter":{"title":"Express 环境配置与模版渲染"}}}}}