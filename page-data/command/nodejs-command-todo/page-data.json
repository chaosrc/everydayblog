{"componentChunkName":"component---src-templates-blog-post-js","path":"/command/nodejs-command-todo/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"17d979c3-a390-5887-93a4-67d83f4c4fd4","excerpt":"使用 Node.js 创建 Todo 命令行程序完成一个命令行小程序，具有以下功能：todo new        创建一个 todotodo get        获取 todo 列表todo complete   完成一个 todotodo help       获取帮助使用到的依赖：lowdb…","html":"<h2>使用 Node.js 创建 Todo 命令行程序</h2>\n<p>完成一个命令行小程序，具有以下功能：</p>\n<ul>\n<li>todo new        创建一个 todo</li>\n<li>todo get        获取 todo 列表</li>\n<li>todo complete   完成一个 todo</li>\n<li>todo help       获取帮助</li>\n</ul>\n<p>使用到的依赖：</p>\n<ul>\n<li>lowdb      用来储存 todo 列表</li>\n<li>chalk      打印带有样式的字符</li>\n<li>yargs      命令行参数校验</li>\n<li>readline   读取用户输入</li>\n</ul>\n<h4>使用 yargs 校验参数</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> yargs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'yargs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> chalk <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'chalk'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> rl <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'readline'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> argv <span class=\"token operator\">=</span> yargs\n<span class=\"token punctuation\">.</span><span class=\"token function\">scriptName</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todo'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">usage</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todo &lt;command>'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">help</span><span class=\"token punctuation\">(</span><span class=\"token string\">'help'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">describe</span><span class=\"token punctuation\">(</span><span class=\"token string\">'help'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'获取帮助'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">'new'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'创建一个 todo'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'获取 todo 列表'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span><span class=\"token function\">command</span><span class=\"token punctuation\">(</span><span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'完成一个 todo'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">.</span>argv\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> chalk<span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> commands <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'new'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'get'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'complete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'delete'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'help'</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>commands<span class=\"token punctuation\">.</span><span class=\"token function\">some</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cmd</span> <span class=\"token operator\">=></span> argv<span class=\"token punctuation\">[</span>cmd<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'参数无效'</span><span class=\"token punctuation\">)</span>\n    yargs<span class=\"token punctuation\">.</span><span class=\"token function\">showHelp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>scriptName() 定义命令行程序的名字，usage() 定义如何使用命令， help() 定义显示帮助的参数。如果输入的命令不在定义范围里面则提示‘参数无效’，并且显示帮助信息</p>\n<p>运行 ./todo  —help</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./todo  --help\ntodo <span class=\"token operator\">&lt;</span>command<span class=\"token operator\">></span>\n\nCommands:\n  todo new       创建一个 todo\n  todo get       获取 todo 列表\n  todo complete  完成一个 todo\n\nOptions:\n  --version  Show version number\n  --help     获取帮助 </code></pre></div>\n<h4>根据命令参数执行程序逻辑</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">run</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cmd</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">switch</span> <span class=\"token punctuation\">(</span>cmd<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'--new'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">newTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'--get'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">getTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'--complete'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">completeTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">case</span> <span class=\"token string\">'--delete'</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">deleteTodo</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token string\">'delete'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span>\n        <span class=\"token keyword\">default</span><span class=\"token punctuation\">:</span>\n            <span class=\"token function\">errorLog</span><span class=\"token punctuation\">(</span><span class=\"token string\">'参数无效'</span><span class=\"token punctuation\">)</span>\n            yargs<span class=\"token punctuation\">.</span><span class=\"token function\">showHelp</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">run</span><span class=\"token punctuation\">(</span>process<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>根据不同的传人参数执行相应的逻辑</p>\n<ul>\n<li>创建 todo</li>\n</ul>\n<p>定义 prompt 提示用户输入</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">question</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> r <span class=\"token operator\">=</span> rl<span class=\"token punctuation\">.</span><span class=\"token function\">createInterface</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        input<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>stdin<span class=\"token punctuation\">,</span>\n        output<span class=\"token punctuation\">:</span> process<span class=\"token punctuation\">.</span>stdout<span class=\"token punctuation\">,</span>\n        terminal<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Promise</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">resove<span class=\"token punctuation\">,</span> reject</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        r<span class=\"token punctuation\">.</span><span class=\"token function\">question</span><span class=\"token punctuation\">(</span>question<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">answer</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n            r<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            <span class=\"token function\">resove</span><span class=\"token punctuation\">(</span>answer<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>添加 newTodo 方法</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">newTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> chalk<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输入待办事项\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> td <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>td<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>运行 todo —new</p>\n<p><img src=\"https://s2.ax1x.com/2019/08/07/e4tx6s.png\"></p>\n<p>2019-08-07 更新</p>\n<hr>\n<p>创建数据库，保存 todo 数据</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token operator\">...</span>\n<span class=\"token keyword\">const</span> lowdb <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lowdb'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> FileSystem <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lowdb/adapters/FileSync'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> adapter <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileSystem</span><span class=\"token punctuation\">(</span><span class=\"token string\">'db.json'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span>  <span class=\"token function\">lowdb</span><span class=\"token punctuation\">(</span>adapter<span class=\"token punctuation\">)</span>\ndb<span class=\"token punctuation\">.</span><span class=\"token function\">defaults</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>todos<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token operator\">...</span>\n\n<span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">newTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> text <span class=\"token operator\">=</span> chalk<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'输入待办事项\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> td <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n    db<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todos'</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">:</span> td<span class=\"token punctuation\">,</span> complete<span class=\"token punctuation\">:</span> <span class=\"token boolean\">false</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>使用 lowdb 创建数据库并保存在 db.json 文件中，创建 todo 时 通过 db 保存新的 todo</p>\n<ul>\n<li>获取 todo 列表</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">getTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> todos <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todos'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    todos<span class=\"token punctuation\">.</span><span class=\"token function\">forEach</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">todo<span class=\"token punctuation\">,</span>i</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>complete<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            text<span class=\"token operator\">+=</span> chalk<span class=\"token punctuation\">.</span><span class=\"token function\">blue</span><span class=\"token punctuation\">(</span><span class=\"token string\">'√'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>text<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>从 db 中获取 todo 列表输出到终端，如果已经完成则添加一个’√’</p>\n<ul>\n<li>完成 todo </li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">completeTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">getTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">let</span> num <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请选择已完成事项\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'参数无效'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        db<span class=\"token punctuation\">.</span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`todos[</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">].complete`</span></span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>先输出所有的 todo 列表，然后提示用户输入完成的 todo，将完成的 todo 状态保存在 db 中</p>\n<ul>\n<li>删除 todo</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">deleteTodo</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">num</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">getTodo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        num <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">prompt</span><span class=\"token punctuation\">(</span><span class=\"token string\">'请选择已完成事项\\n'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isInteger</span><span class=\"token punctuation\">(</span><span class=\"token function\">Number</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'参数无效'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">const</span> todos <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'todos'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>num <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">const</span> deleteTitle <span class=\"token operator\">=</span> todos<span class=\"token punctuation\">.</span><span class=\"token function\">value</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>title\n        todos<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>chalk<span class=\"token punctuation\">.</span><span class=\"token function\">red</span><span class=\"token punctuation\">(</span><span class=\"token string\">'删除: '</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> deleteTitle<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>删除有两种方式，一是通过 <code class=\"language-text\">todo --delete number</code> 通过 —delete 后面的参数值来删除对应的 todo，如果没有 输入 number 值则使用第二种方式，输入所有 todo 列表，提示输入需要删除的项，进行删除</p>\n<p>运行整个流程</p>\n<p>创建 todo</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./todo  --new\n输入待办事项\n吃饭\n$ ./todo  --new\n输入待办事项\n睡觉</code></pre></div>\n<p>列出 todo</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./todo  --get\n1. 吃饭\n2. 睡觉</code></pre></div>\n<p>完成 todo</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ ./todo  --complete\n1. 吃饭\n2. 睡觉\n请选择已完成事项\n1\n$ ./todo  --get\n1. 吃饭√\n2. 睡觉</code></pre></div>","frontmatter":{"title":"使用 Node.js 编写命令行程序（二）","date":"August 06, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/command/nodejs-command-todo/","previous":{"fields":{"slug":"/command/command-1/"},"frontmatter":{"title":"使用 Node.js 编写命令行程序（—）"}},"next":null}}}