{"componentChunkName":"component---src-templates-blog-post-js","path":"/crypto/crypto-2/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"962995cb-daac-5fe4-b0d8-f9fb51ebf0b3","excerpt":"现代密码学：简介（二）Kerckhoffs 原则Auguste Kerckhoffs 提出的密码的设计原则：加密方法本身不需要保持私密，交流双方只需要将 key 做为唯一的私密信息原因为：首先维护一个短的 key 比维护一个算法更容易，通常一个加密程序的大小是一个 key…","html":"<h2>现代密码学：简介（二）</h2>\n<h4>Kerckhoffs 原则</h4>\n<p>Auguste Kerckhoffs 提出的密码的设计原则：</p>\n<blockquote>\n<p>加密方法本身不需要保持私密，交流双方只需要将 key 做为唯一的私密信息</p>\n</blockquote>\n<p>原因为：首先维护一个短的 key 比维护一个算法更容易，通常一个加密程序的大小是一个 key 几千倍，算法的细节能够被泄露或者通过逆向工程学习；其次如果 key 被暴露，更换 key 比更换使用的算法更容易。</p>\n<p>如今，Kerchhoffs 原则被理解为：不但安全性不依赖于算法的使用，而且要求这些算法是公开的。</p>\n<p>开放密码设计的好处：</p>\n<ol>\n<li>发布的设计经受公共的审查而更加强壮。很多年的经验示范了，创建好的加密方案是非·困难的。因此在经过了广泛的研究和承受住了很多攻击后，我们对一个方案的安全性会有更多的自信。</li>\n<li>安全的瑕疵被”道德黑客”披露并公开，比让怀有恶意的人知道更好.</li>\n<li>如果安全系统依赖于安全算法，那么对代码的逆向工程会严重威胁安全性。</li>\n<li>公开的设计使标准的建立称为可能</li>\n</ol>\n<h4>攻击场景</h4>\n<p>对加密方案的几种基本攻击类型：</p>\n<ul>\n<li>Ciphertext-only 攻击：这是最基本的攻击方法，指对手知道加密文本尝试计算出被加密过的原始文本</li>\n<li>Known-plaintext 攻击：对手学习同一个 key 加密的一个或多个原始文本/加密文本对，目标是给定其他的加密文本计算出对应的原始文本</li>\n<li>Chosen-plaintext 攻击：对手能够对其选择获取任何原始文本的加密文本，尝试计算出其他加密文本的原始文本</li>\n<li>Chosen-ciphertext 攻击：对手能够对其选择对任何加密文本进行解密，目的同样是对于给定的其他加密文本（对手无法直接解密）计算出原始文本</li>\n</ul>\n<p>前两种类型攻击是被动的，对手仅仅接收了一些加密文本和对应的原始文本，然后发起攻击。相反，后面两种是主动攻击，对手能够对它选择文本进行加密或解密</p>","frontmatter":{"title":"现代密码学：简介（二）","date":"January 01, 2020","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/crypto/crypto-2/","previous":{"fields":{"slug":"/crypto/crypto-1/"},"frontmatter":{"title":"现代密码学：简介（一）"}},"next":{"fields":{"slug":"/go-rpc/go-rpc-5/"},"frontmatter":{"title":"Go RPC (五)"}}}}}