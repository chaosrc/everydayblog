{"componentChunkName":"component---src-pages-index-js","path":"/","webpackCompilationHash":"692ee2b79c26dd6d5a8a","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新"}},"allMarkdownRemark":{"edges":[{"node":{"excerpt":"LeetCode初级算法题—最大子序和最大子序和问题描述给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和。示例:分析最简单的情况数组长度为1数组长度为2时连续子数组有-2,-2, 1,1,对比长度为1时，增加了两个连续子数组-…","fields":{"slug":"/typescript/maxsubarray/"},"frontmatter":{"date":"June 21, 2019","title":"LeetCode算法题--最大子序和","description":"给定一个整数数组 nums ，找到一个具有最大和的连续子数组（子数组最少包含一个元素），返回其最大和"}}},{"node":{"excerpt":"索引类型与映射类型索引类型通过keyof(索引类型查询操作符)关键词,可以拿到类型的所有属性即索引K的类型为T所有的属性的联合类型，这时K等同于再通过in关键词来索引其中TP是索引访问操作符，通过像索引一样查询T中对应的类型。M的类型为, M…","fields":{"slug":"/typescript/maptype/"},"frontmatter":{"date":"June 20, 2019","title":"Typescript系列(六)：索引类型与映射类型","description":"本篇介绍typescript中的索引类型与映射类型"}}},{"node":{"excerpt":"泛型及泛型的约束泛型是什么先从一个例子开始：对于log函数有了类型限定后message参数只能为string类型，那么函数的通用性不够，比如要打印一个数字，会报类型错误，一种方式是将message设置为any类型此时log…","fields":{"slug":"/typescript/generic/"},"frontmatter":{"date":"June 19, 2019","title":"Typescript系列(五)：泛型及泛型的约束","description":"本篇介绍typescript中的泛型及泛型的约束"}}},{"node":{"excerpt":"类型别名类型别名就是给类型起一个新的名字，可以作用于任意类型包括基本类型、class类型、接口类型等，但是相对于接口来说不能用于继承给基本类型定义别名：那么name的类型依然是string…","fields":{"slug":"/typescript/types/"},"frontmatter":{"date":"June 18, 2019","title":"Typescript系列(四)：类型别名以及交叉类型、联合类型","description":"本篇介绍typescript中的类型别名及交叉类型、联合类型的定义使用"}}},{"node":{"excerpt":"本篇为Typescript系列的第三篇，主要内容为Typescript的接口的实现和继承。阅读之前需要了解Typescript的接口，可以参考之前的文章 Typescript(二)：接口上一篇介绍了Typescript（以下简称ts…","fields":{"slug":"/typescript/inherit-and-type/"},"frontmatter":{"date":"June 17, 2019","title":"Typescript(三)：接口的实现和继承","description":"本篇为Typescript系列的第三篇，主要内容为Typescript的接口的实现和继承"}}},{"node":{"excerpt":"-本篇文章主要介绍Typescript接口，阅读之前需要了解Typescript的基本类型，可参考Typescript(一)：基本类型一门语言中的类型出了基本类型之外大部分都是自定义的类型，Typescript（以下简称ts）中提供两种定义类型的方式type…","fields":{"slug":"/typescript/interface/"},"frontmatter":{"date":"June 16, 2019","title":"Typescript(二)：接口","description":null}}},{"node":{"excerpt":".CodeMirror { height: auto; }\n.CodeMirror.cm-s-inner { background-image: inherit; background-size: inherit; background-attachment: inherit…","fields":{"slug":"/typescript/"},"frontmatter":{"date":"June 15, 2019","title":"Typescript(一)：基本类型","description":"本篇是Typescript系列的第一篇，介绍了什么是Typescript、为什么要用Typescript以及Typescript的基本类型"}}}]}},"pageContext":{"isCreatedByStatefulCreatePages":true}}}