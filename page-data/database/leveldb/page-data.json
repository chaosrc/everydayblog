{"componentChunkName":"component---src-templates-blog-post-js","path":"/database/leveldb/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"6ba40bf3-cb8a-5cd7-b6f0-2c3509bde0ae","excerpt":"嵌入式数据库 LevelDB嵌入式数据库是嵌入在程序的进程中的，不需要依赖外部的服务器。在程序需要做到自包含时候比如移动端或者桌面程序，只能选择嵌入式数据库。Node.js 中常用的嵌入式数据库有 SQLite、LevelDB、RocksDB等，除了 SQLite 外大部分都是简单的键值对储存LevelDB…","html":"<h2>嵌入式数据库 LevelDB</h2>\n<p>嵌入式数据库是嵌入在程序的进程中的，不需要依赖外部的服务器。在程序需要做到自包含时候比如移动端或者桌面程序，只能选择嵌入式数据库。</p>\n<p>Node.js 中常用的嵌入式数据库有 SQLite、LevelDB、RocksDB等，除了 SQLite 外大部分都是简单的键值对储存</p>\n<p>LevelDB 是由 Google 开发的嵌入式的键值对存储数据库，拥有非常简单的操作命令：Get、Put、Del 和 Patch</p>\n<h4>安装 LevelDB</h4>\n<p>npm 中的 level 模块封装了 LevelDB 操作，由于 LevelDB 是嵌入式的所以不需要再安装额外的依赖</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> level</code></pre></div>\n<h4>使用 LevelDB</h4>\n<p>创建数据库</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> level <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'level'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">let</span> db <span class=\"token operator\">=</span> <span class=\"token function\">level</span><span class=\"token punctuation\">(</span><span class=\"token string\">'article'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>level 方法的第一参数用来指定数据库文件的位置，调用 level 将会在指定的文件夹下创建数据库</p>\n<p>键值对的读写</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">db<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n    db<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>使用 put 方法将数据插入数据库，如果 key 已经存在则覆盖之前的数据。get 方法获取 key 的 value， 如果 key 不存在则报错</p>\n<p>删除数据</p>\n<p>与 get 不同，如果 key 不存在也不会报错</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">db<span class=\"token punctuation\">.</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>批量操作</p>\n<p>batch 方法支持快速的批量操作 put 和 del。batch 操作支持两种方式： 数组（array form）和链式（chained form）<a href=\"https://github.com/Level/level#batch\">\b^1</a></p>\n<p>数组形式</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">db<span class=\"token punctuation\">.</span><span class=\"token function\">batch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"del\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">:</span> <span class=\"token string\">'name'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"put\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">:</span> <span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'123'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        type<span class=\"token punctuation\">:</span> <span class=\"token string\">\"put\"</span><span class=\"token punctuation\">,</span> key<span class=\"token punctuation\">:</span> <span class=\"token string\">'foo2'</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">:</span> <span class=\"token string\">'345'</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token parameter\">err</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>链式调用</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">db<span class=\"token punctuation\">.</span><span class=\"token function\">batch</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">del</span><span class=\"token punctuation\">(</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1234</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span><span class=\"token string\">'foo2'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">456</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"嵌入式数据库 LevelDB","date":"July 26, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/database/leveldb/","previous":{"fields":{"slug":"/database/redis/"},"frontmatter":{"title":"在 Node.js 中使用 Redis"}},"next":{"fields":{"slug":"/test/nodejs-unit-test/"},"frontmatter":{"title":"Node.js 单元测试"}}}}}