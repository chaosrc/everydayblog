{"componentChunkName":"component---src-templates-blog-post-js","path":"/database/PostgreSQL/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"7f51a8d1-47f5-5b89-af17-5252187f2c96","excerpt":"PostgreSQL 简单使用PostgreSQL 是开源、强大、且功能丰富的关系型数据库安装 PostgreSQL最简单的方式是使用 Docker 安装 环境变量用来设置数据库的密码， 用来设置数据库的用户名，然后将数据库数据映射到宿主机通过日志查看是否启动postgres…","html":"<h2>PostgreSQL 简单使用</h2>\n<p>PostgreSQL 是开源、强大、且功能丰富的关系型数据库</p>\n<h4>安装 PostgreSQL</h4>\n<p>最简单的方式是使用 Docker 安装</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --name my-postgres -e POSTGRES_PASSWORD<span class=\"token operator\">=</span>123456 -e POSTGRES_USER<span class=\"token operator\">=</span>postgres -v ~/workspace/sql-data/postgre:/var/lib/postgresql/data -p 5432:5432 -d postgres</code></pre></div>\n<p><code class=\"language-text\">POSTGRES_PASSWORD</code> 环境变量用来设置数据库的密码，<code class=\"language-text\">POSTGRES_USER</code> 用来设置数据库的用户名，然后将数据库数据映射到宿主机</p>\n<p>通过日志查看是否启动</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker logs my-postgres\n<span class=\"token punctuation\">..</span>.\n2019-07-20 16:22:32.267 UTC <span class=\"token punctuation\">[</span>21<span class=\"token punctuation\">]</span> LOG:  redo starts at 0/16518F0\n2019-07-20 16:22:32.268 UTC <span class=\"token punctuation\">[</span>21<span class=\"token punctuation\">]</span> LOG:  invalid record length at 0/16519D0: wanted 24, got 0\n2019-07-20 16:22:32.268 UTC <span class=\"token punctuation\">[</span>21<span class=\"token punctuation\">]</span> LOG:  redo <span class=\"token keyword\">done</span> at 0/1651998\n2019-07-20 16:22:32.296 UTC <span class=\"token punctuation\">[</span>1<span class=\"token punctuation\">]</span> LOG:  database system is ready to accept connections</code></pre></div>\n<p>postgres 启动成功，接下来就可以创建数据库了</p>\n<h4>创建数据库</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker <span class=\"token function\">exec</span> -it my-postgres psql -U postgres -c <span class=\"token string\">\"create database articles\"</span>\nCREATE DATABASE</code></pre></div>\n<h4>在 Node.js 中连接 Postgres</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">$ npm install pg</code></pre></div>\n<p>pg 模块是 postgres 的 Node.js 客户端</p>\n<p>连接到 Postgres </p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Postgres <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pg'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> db <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Postgres<span class=\"token punctuation\">.</span>Client</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    user<span class=\"token punctuation\">:</span> <span class=\"token string\">'postgres'</span><span class=\"token punctuation\">,</span>\n    password<span class=\"token punctuation\">:</span> <span class=\"token string\">'123456'</span><span class=\"token punctuation\">,</span>\n    host<span class=\"token punctuation\">:</span> <span class=\"token string\">'***.***.***.***'</span><span class=\"token punctuation\">,</span>\n    port<span class=\"token punctuation\">:</span> <span class=\"token string\">'5432'</span><span class=\"token punctuation\">,</span>\n    database<span class=\"token punctuation\">:</span> <span class=\"token string\">'articles'</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\n\n<span class=\"token keyword\">class</span> <span class=\"token class-name\">Articels</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">db</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>db <span class=\"token operator\">=</span> db\n    <span class=\"token punctuation\">}</span>\n    <span class=\"token keyword\">async</span> <span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'connect success'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">new</span> <span class=\"token class-name\">Articels</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>创建表</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">createTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n        CREATE TABLE IF NOT EXISTS article (\n            id SERIAL,\n            PRIMARY KEY(id),\n            content text\n        )\n    `</span></span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'create table'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>插入数据</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n        INSERT INTO article (content) VALUES ($1)\n    `</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">[</span>content<span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'insert row: '</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>更新数据</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">id<span class=\"token punctuation\">,</span> content</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n        UPDATE article SET content = ($1) WHERE id=$2 \n    `</span></span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>content<span class=\"token punctuation\">,</span> id<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'update: '</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>查询数据</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>db<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token string\">`\n        SELECT * FROM article ORDER BY id\n    `</span></span><span class=\"token punctuation\">)</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'query: '</span><span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>rowCount<span class=\"token punctuation\">,</span> result<span class=\"token punctuation\">.</span>rows<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>测试是否成功运行</h4>\n<p>测试代码</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">async</span> <span class=\"token keyword\">function</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">let</span> art <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Articels</span><span class=\"token punctuation\">(</span>db<span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">await</span> art<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">await</span> art<span class=\"token punctuation\">.</span><span class=\"token function\">createTable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">await</span> art<span class=\"token punctuation\">.</span><span class=\"token function\">insert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello postgres'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">await</span> art<span class=\"token punctuation\">.</span><span class=\"token function\">update</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'update content'</span><span class=\"token punctuation\">)</span>\n\n        <span class=\"token keyword\">await</span> art<span class=\"token punctuation\">.</span><span class=\"token function\">query</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n        \n        db<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>error<span class=\"token punctuation\">)</span>\n        db<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>运行结果</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node modle/pg.js \nconnect success\ncreate table\nupdate:  1\nquery:  2 <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span> id: 1, content: <span class=\"token string\">'hello postgres'</span> <span class=\"token punctuation\">}</span>,\n  <span class=\"token punctuation\">{</span> id: 2, content: <span class=\"token string\">'update content'</span> <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span></code></pre></div>","frontmatter":{"title":"PostgreSQL 简单使用","date":"July 20, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/database/PostgreSQL/","previous":{"fields":{"slug":"/nodejs/express-rest-api/"},"frontmatter":{"title":"Express Web 之创建 REST API"}},"next":{"fields":{"slug":"/database/kenx/"},"frontmatter":{"title":"查询构建器 Knex"}}}}}