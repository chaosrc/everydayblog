{"componentChunkName":"component---src-templates-blog-post-js","path":"/database/mongodb/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"075a735d-2d3e-581f-8e17-06da95791179","excerpt":"MongoDB 简介MongoDB 是面向对象的分布式数据库，基于文档储存，将文档储存在无模式的数据集中，不需要为预先文档定义模式，同一个文档中也不用遵循相同的模式，因此拥有很高的灵活性。安装 MongoDB安装 Node.js 客户端安装 MongoDB 官方 npm 包 mongodb连接到 MongoDB…","html":"<h2>MongoDB 简介</h2>\n<p>MongoDB 是面向对象的分布式数据库，基于文档储存，将文档储存在无模式的数据集中，不需要为预先文档定义模式，同一个文档中也不用遵循相同的模式，因此拥有很高的灵活性。<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup></p>\n<h4>安装 MongoDB</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ docker run --name mongodb \\\n    -e MONGO_INITDB_ROOT_USERNAME<span class=\"token operator\">=</span>admin \\\n    -e MONGO_INITDB_ROOT_PASSWORD<span class=\"token operator\">=</span>123456 \\\n    -v ~/workspace/sql-data/mongo \\\n    -p 27017:27017 \\\n    -d mongo</code></pre></div>\n<h4>安装 Node.js 客户端</h4>\n<p>安装 MongoDB 官方 npm 包 mongodb</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">npm</span> <span class=\"token function\">install</span> mongodb</code></pre></div>\n<h4>连接到 MongoDB</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> Monogo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mongodb'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> mongo <span class=\"token operator\">=</span> Monogo<span class=\"token punctuation\">.</span>MongoClient\n\nmongo<span class=\"token punctuation\">.</span><span class=\"token function\">connect</span><span class=\"token punctuation\">(</span>\n  <span class=\"token string\">\"mongodb://***.***.***.***:27017\"</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span> useNewUrlParser<span class=\"token punctuation\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> auth<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> user<span class=\"token punctuation\">:</span> <span class=\"token string\">\"admin\"</span><span class=\"token punctuation\">,</span> password<span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456\"</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">(</span><span class=\"token parameter\">err<span class=\"token punctuation\">,</span> client</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"success\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>通过 <code class=\"language-text\">connect</code> 方法第一个参数 url 指定 ip 以及端口号，第二个参数是可选的配置项用来设置用户名、密码以及其他选项，第三个参数是回调如果连接失败则返回 err 对象，否则返回 client 对象</p>\n<h4>MongoDB 文档</h4>\n<p>MongoDB 将数据储存为 BSON 文档格式，BSON 是 JSON 的二进制展示方式比 JSON 有更多的数据类型。<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup></p>\n<p>MongoDB 文档由健值对组成，如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"json\"><pre class=\"language-json\"><code class=\"language-json\"><span class=\"token punctuation\">{</span>\n    <span class=\"token property\">\"key1\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"value1\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token property\">\"key2\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"value2\"</span><span class=\"token punctuation\">,</span>\n    ...\n    <span class=\"token property\">\"keyn\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"valuen\"</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>值的类型可以是任意的 <a href=\"https://docs.mongodb.com/manual/reference/bson-types/\">BSON</a> 数据类型，以下是文档中包含的不同类型：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> doc <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    _id<span class=\"token punctuation\">:</span> <span class=\"token function\">ObjectId</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12223dtgrtryry'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    address<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span>province<span class=\"token punctuation\">:</span> <span class=\"token string\">'江苏'</span>，city<span class=\"token punctuation\">:</span> <span class=\"token string\">'南京'</span><span class=\"token punctuation\">}</span>，\n    birth<span class=\"token punctuation\">:</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Date</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n    array<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>健的类型是字符串，对健有如下限制：</p>\n<ul>\n<li>_id 为保留字段做为主健使用，它的值必须在集合中唯一并且不可变的</li>\n<li>不能是 null</li>\n<li>顶层的健不能以 $ 符号开头</li>\n</ul>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>《 Node.js 实战（第二版）》第8章存储数据</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p><a href=\"https://docs.mongodb.com/manual/core/document/#bson-document-format\">https://docs.mongodb.com/manual/core/document/#bson-document-format</a></p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","frontmatter":{"title":"MongoDB 简介","date":"July 22, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/database/mongodb/","previous":{"fields":{"slug":"/database/kenx/"},"frontmatter":{"title":"查询构建器 Knex"}},"next":null}}}