{"componentChunkName":"component---src-templates-blog-post-js","path":"/database/MongoDB-CRUD/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"8a6da907-981c-53a2-9aa0-d75b45b06a64","excerpt":"MongoDB 数据库插入和查询操作插入文档如果当前集合不存在，插入操作将会创建集合通过  在集合中插入一个文档 返回的 Promise 中提供了 result 对象， result.insertedId 为新插入文档的 _id 方法传人一个数组可以将多个文档插入集合中同样 result.insertedIds…","html":"<h2>MongoDB 数据库插入和查询操作</h2>\n<h4>插入文档</h4>\n<blockquote>\n<p>如果当前集合不存在，插入操作将会创建集合</p>\n</blockquote>\n<p>通过 <code class=\"language-text\">Collection.insertOne</code> 在集合中插入一个文档</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">insertOne</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n  title<span class=\"token punctuation\">:</span> <span class=\"token number\">123</span><span class=\"token punctuation\">,</span>\n  content<span class=\"token punctuation\">:</span> <span class=\"token number\">123432</span><span class=\"token punctuation\">,</span>\n  tag<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"tech\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><code class=\"language-text\">insertOne</code> 返回的 Promise 中提供了 result 对象， result.insertedId 为新插入文档的 _id</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>insertedId<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// 5d3727b6aff0881ccd998522</span></code></pre></div>\n<p><code class=\"language-text\">Collection.insertMany</code> 方法传人一个数组可以将多个文档插入集合中</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> db\n  <span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">insertMany</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">:</span> <span class=\"token string\">\"Lorem ipsum dolor sit amet\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span> title<span class=\"token punctuation\">:</span> <span class=\"token string\">\"bar\"</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">:</span> <span class=\"token string\">\"consectetur adipisicing elit.\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">.</span>insertedIds<span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// { '0': 5d372a377df7ec1ff7631ed8, '1': 5d372a377df7ec1ff7631ed9 }</span></code></pre></div>\n<p>同样 result.insertedIds 中包含了新插入文档的 _id</p>\n<p>在 MongoDB 中每一个储存在集合中的文档需要一个唯一的 _id 做为主健（primary key），如果插入的文档中没有 _id 字段，MongoDB 会 z 自动生成</p>\n<p>在 MongoDB 中所以的写操作在单个文档层面都是原子性的</p>\n<h4>查找文档</h4>\n<p>查找集合中的所有文档</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> cursor <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>上面的操作等同于 SQL 中的 <code class=\"language-text\">select * from article</code></p>\n<p>指定相等条件查询</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> cursor <span class=\"token operator\">=</span> db<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> status<span class=\"token punctuation\">:</span> <span class=\"token string\">\"D\"</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>等同于 SQL 中的 <code class=\"language-text\">select * from article where status = &quot;D&quot;</code></p>\n<p>IN 条件查询</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> cursor <span class=\"token operator\">=</span> da<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> status<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> $<span class=\"token keyword\">in</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"A\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"D\"</span><span class=\"token punctuation\">]</span> <span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>等同于 SQL 中的 <code class=\"language-text\">select * from article where status in [&quot;A&quot;, &quot;D&quot;]</code></p>\n<p>AND 条件查询</p>\n<p>在查找文档是如果指定多个字段，隐含了 AND 逻辑，比如：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> cursor <span class=\"token operator\">=</span> da<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> status<span class=\"token punctuation\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span> qty<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>相当于 <code class=\"language-text\">select * from article where status = &quot;A&quot; and qty = 20</code></p>\n<p>OR 条件查询</p>\n<p>使用 $or 操作符来表达或的逻辑</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> cursor <span class=\"token operator\">=</span> da<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    $or<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> status<span class=\"token punctuation\">:</span> <span class=\"token string\">'A'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> qty<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>相当于 <code class=\"language-text\">select * from article where status = &quot;A&quot; or qty = 20</code></p>\n<p>AND 和 OR 操作</p>\n<p>选择 status 为 A 并且 name 以 foo 开头或者 qty 小于 30 的所有文档</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">let</span> cursor <span class=\"token operator\">=</span> da<span class=\"token punctuation\">.</span><span class=\"token function\">collection</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"article\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">find</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> \n        status<span class=\"token punctuation\">:</span> <span class=\"token string\">'A'</span><span class=\"token punctuation\">,</span>\n        $or<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">{</span> name<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> $regex<span class=\"token punctuation\">:</span> <span class=\"token string\">'^foo'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> qty<span class=\"token punctuation\">:</span> <span class=\"token punctuation\">{</span> $lt<span class=\"token punctuation\">:</span> <span class=\"token number\">20</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>相当于 <code class=\"language-text\">select * from article where status = &quot;A&quot; and ( qty &lt; 20 or name like &quot;foo%&quot;)</code></p>\n<blockquote>\n<p>MongoDB 支持正则表达式 <code class=\"language-text\">$regex</code>, 以及 <code class=\"language-text\">$lt</code> 小于，<code class=\"language-text\">$gt</code> 大于等操作符，参考文档<a href=\"https://docs.mongodb.com/manual/reference/operator/query/\">Query and Projection Operators</a></p>\n</blockquote>","frontmatter":{"title":"MongoDB 数据库插入和查询操作","date":"July 23, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/database/MongoDB-CRUD/","previous":{"fields":{"slug":"/database/mongodb/"},"frontmatter":{"title":"MongoDB 简介"}},"next":{"fields":{"slug":"/database/mongo-ud/"},"frontmatter":{"title":"MongoDB 数据库更新和删除操作"}}}}}