{"componentChunkName":"component---src-templates-blog-post-js","path":"/debug/tick-processor/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"2f8c35ba-bd2c-528b-a56f-bd00934c55d1","excerpt":"使用 Tick Processor 分析 CPU 使用情况Tick Processor 是 v8 内置的一个性能分析工具，可以记录 Javascript、C、C++代码的堆栈信息，该功能默认是关闭的，可以通过添加命令行参数 —prof 开启创建测试代码创建了一个 hash 函数使用 crypto.pbkdf2Sync…","html":"<h2>使用 Tick Processor 分析 CPU 使用情况</h2>\n<p>Tick Processor 是 v8 内置的一个性能分析工具，可以记录 Javascript、C、C++代码的堆栈信息，该功能默认是关闭的，可以通过添加命令行参数 —prof 开启</p>\n<h4>创建测试代码</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> crypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crypto'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">password</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> salt <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">const</span> hash <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">pbkdf2Sync</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sha512'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> hash\n<span class=\"token punctuation\">}</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pbkdf2Sync'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token string\">'123456qwert'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pbkdf2Sync'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>创建了一个 hash 函数使用 crypto.pbkdf2Sync 方法同步计算 hash 值，将 hash 函数循环执行 100 次来做 CPU 密集型运算</p>\n<p>使用 —prof 参数运行</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node --prof index.js \npbkdf2Sync: 753.065ms</code></pre></div>\n<p>执行 100 次 pbkdf2Sync 函数共消耗了 753.065ms，同时生成了 isolate-0x103802000-66678-v8.log 文件</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">less</span> isolate-0x103802000-66678-v8.log\nv8-version,7,4,288,27,-node.18,0\nshared-library,/usr/local/bin/node,0x100001000,0x100f2e38d,0\nshared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x7fff40d46810,0x7fff40f399ac,421\nshared-library,/System/Library/Frameworks/CoreFoundation.framework/Versions/A/CoreFoundation,0x7fff40d46810,0x7fff40f399ac,421703680\nshared-library,/usr/lib/libSystem.B.dylib,0x7fff6693694a,0x7fff66936b2e,421703680\nshared-library,/usr/lib/libc++.1.dylib,0x7fff66b6af40,0x7fff66bb22b0,421703680\nshared-library,/usr/lib/libDiagnosticMessagesClient.dylib,0x7fff665bff08,0x7fff665c090c,421703680\nshared-library\n<span class=\"token punctuation\">..</span>.</code></pre></div>\n<h4>使用 —prof-process 命令解析 log 数据</h4>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node --prof-process isolate-0x103802000-66678-v8.log\n\nStatistical profiling result from isolate-0x103802000-66678-v8.log, <span class=\"token punctuation\">(</span>659 ticks, 4 unaccounted, 0 excluded<span class=\"token punctuation\">)</span>.\n\n <span class=\"token punctuation\">[</span>Shared libraries<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n      1    0.2%          /usr/lib/system/libsystem_platform.dylib\n\n <span class=\"token punctuation\">[</span>JavaScript<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n\n <span class=\"token punctuation\">[</span>C++<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n    583   88.5%   88.6%  T node::crypto::PBKDF2<span class=\"token punctuation\">(</span>v8::FunctionCallbackInfo<span class=\"token operator\">&lt;</span>v8::Value<span class=\"token operator\">></span> const<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>\n     25    3.8%    3.8%  T node::native_module::NativeModuleEnv::CompileFunction<span class=\"token punctuation\">(</span>v8::FunctionCallbackInfo<span class=\"token operator\">&lt;</span>v8::Value<span class=\"token operator\">></span> const<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>\n     20    3.0%    3.0%  t \n     <span class=\"token punctuation\">..</span>.\n\n <span class=\"token punctuation\">[</span>Summary<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n      0    0.0%    0.0%  JavaScript\n    654   99.2%   99.4%  C++\n      2    0.3%    0.3%  GC\n      1    0.2%          Shared libraries\n      4    0.6%          Unaccounted\n\n <span class=\"token punctuation\">[</span>C++ entry points<span class=\"token punctuation\">]</span>:\n   ticks    cpp   total   name\n    622   96.7%   94.4%  T __ZN2v88internal21Builtin_HandleApiCallEiPmPNS0_7IsolateE\n     21    3.3%    3.2%  t __ZN2v88internalL47Builtin_Impl_Stats_CallSitePrototypeGetTypeNameEiPmPNS0_7IsolateE\n\n <span class=\"token punctuation\">[</span>Bottom up <span class=\"token punctuation\">(</span>heavy<span class=\"token punctuation\">)</span> profile<span class=\"token punctuation\">]</span>:\n  Note: percentage shows a share of a particular caller <span class=\"token keyword\">in</span> the total\n  amount of its parent calls.\n  Callers occupying <span class=\"token function\">less</span> than 1.0% are not shown.\n\n   ticks parent  name\n    583   88.5%  T node::crypto::PBKDF2<span class=\"token punctuation\">(</span>v8::FunctionCallbackInfo<span class=\"token operator\">&lt;</span>v8::Value<span class=\"token operator\">></span> const<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>\n    583  100.0%    T __ZN2v88internal21Builtin_HandleApiCallEiPmPNS0_7IsolateE\n    583  100.0%      LazyCompile: ~handleError internal/crypto/pbkdf2.js:74:21\n    583  100.0%        LazyCompile: ~pbkdf2Sync internal/crypto/pbkdf2.js:44:20\n    583  100.0%          LazyCompile: ~hash /Users/chao/workspace/node/node-demo/tick-processor/index.js:3:14\n    583  100.0%            Eval: ~<span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span> /Users/chao/workspace/node/node-demo/tick-processor/index.js:1:1</code></pre></div>\n<p>输出的内容包括6部分：Shared libraries、JavaScript、C++、Summary、C++ entry points、Bottom up (heavy) profile，其中 JavaScript 和 C++ 部分列出了对应代码执行时所占的 CPU 时钟周期（ticks），Summary 则列出了各个部分总的 CPU 时钟周期占比。可以看出 C++ 代码部分占据了 99.2% 的 CPU 时钟周期，而其中 node::crypto::PBKDF2 方法又占据了 88.5% 的 CPU 时钟周期</p>\n<h4>创建异步测试代码</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> crypto <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'crypto'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">password<span class=\"token punctuation\">,</span> cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> salt <span class=\"token operator\">=</span> crypto<span class=\"token punctuation\">.</span><span class=\"token function\">randomBytes</span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">toString</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base64'</span><span class=\"token punctuation\">)</span>\n\n    crypto<span class=\"token punctuation\">.</span><span class=\"token function\">pbkdf2</span><span class=\"token punctuation\">(</span>password<span class=\"token punctuation\">,</span> salt<span class=\"token punctuation\">,</span> <span class=\"token number\">10000</span><span class=\"token punctuation\">,</span> <span class=\"token number\">64</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sha512'</span><span class=\"token punctuation\">,</span> cb<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">let</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">time</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pbkdf2'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> <span class=\"token number\">100</span><span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">hash</span><span class=\"token punctuation\">(</span><span class=\"token string\">'12356qwert'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        count<span class=\"token operator\">++</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>count <span class=\"token operator\">===</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            console<span class=\"token punctuation\">.</span><span class=\"token function\">timeEnd</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pbkdf2'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>将 crypto.pbkdf2Sync 同步方法换成异步方法 crypto.pbkdf2，再运行</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node --prof async.js \npbkdf2: 373.455ms</code></pre></div>\n<p>运行时间较同步方法快了将近一倍</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ node --prof-process isolate-0x102803e00-69628-v8.log \nStatistical profiling result from isolate-0x102803e00-69628-v8.log, <span class=\"token punctuation\">(</span>155 ticks, 4 unaccounted, 0 excluded<span class=\"token punctuation\">)</span>.\n\n <span class=\"token punctuation\">[</span>Shared libraries<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n      1    0.6%          /usr/lib/system/libsystem_platform.dylib\n\n <span class=\"token punctuation\">[</span>JavaScript<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n\n <span class=\"token punctuation\">[</span>C++<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n     73   47.1%   47.4%  T _kpersona_get\n     28   18.1%   18.2%  t __ZN2v88internalL47Builtin_Impl_Stats_CallSitePrototypeGetTypeNameEiPmPNS0_7IsolateE\n     22   14.2%   14.3%  T node::native_module::NativeModuleEnv::CompileFunction<span class=\"token punctuation\">(</span>v8::FunctionCallbackInfo<span class=\"token operator\">&lt;</span>v8::Value<span class=\"token operator\">></span> const<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>\n      4    2.6%    2.6%  T node::binding::GetInternalBinding<span class=\"token punctuation\">(</span>v8::FunctionCallbackInfo<span class=\"token operator\">&lt;</span>v8::Value<span class=\"token operator\">></span> const<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>\n      4    2.6%    2.6%  T ___guarded_open_np\n     <span class=\"token punctuation\">..</span>.\n\n <span class=\"token punctuation\">[</span>Summary<span class=\"token punctuation\">]</span>:\n   ticks  total  nonlib   name\n      0    0.0%    0.0%  JavaScript\n    150   96.8%   97.4%  C++\n      2    1.3%    1.3%  GC\n      1    0.6%          Shared libraries\n      4    2.6%          Unaccounted\n\n <span class=\"token punctuation\">[</span>C++ entry points<span class=\"token punctuation\">]</span>:\n   ticks    cpp   total   name\n     29   54.7%   18.7%  T __ZN2v88internal21Builtin_HandleApiCallEiPmPNS0_7IsolateE\n     23   43.4%   14.8%  t __ZN2v88internalL47Builtin_Impl_Stats_CallSitePrototypeGetTypeNameEiPmPNS0_7IsolateE\n      1    1.9%    0.6%  t node::inspector::<span class=\"token punctuation\">(</span>anonymous namespace<span class=\"token punctuation\">)</span>::InspectorConsoleCall<span class=\"token punctuation\">(</span>v8::FunctionCallbackInfo<span class=\"token operator\">&lt;</span>v8::Value<span class=\"token operator\">></span> const<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">)</span>\n\n <span class=\"token punctuation\">[</span>Bottom up <span class=\"token punctuation\">(</span>heavy<span class=\"token punctuation\">)</span> profile<span class=\"token punctuation\">]</span>:\n  Note: percentage shows a share of a particular caller <span class=\"token keyword\">in</span> the total\n  amount of its parent calls.\n  Callers occupying <span class=\"token function\">less</span> than 1.0% are not shown.\n\n   ticks parent  name\n     73   47.1%  T _kpersona_get\n\n     28   18.1%  t __ZN2v88internalL47Builtin_Impl_Stats_CallSitePrototypeGetTypeNameEiPmPNS0_7IsolateE\n     12   42.9%    t __ZN2v88internalL47Builtin_Impl_Stats_CallSitePrototypeGetTypeNameEiPmPNS0_7IsolateE\n      2   16.7%      LazyCompile: ~copyProps internal/per_context/primordials.js:28:19\n      1   50.0%        LazyCompile: ~makeSafe internal/per_context/primordials.js:51:18\n      1  100.0%          Eval: ~<span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span> internal/per_context/primordials.js:1:1\n      1   50.0%        LazyCompile: ~<span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span> internal/per_context/primordials.js:104:11\n      1  100.0%          t __ZN2v88internalL47Builtin_Impl_Stats_CallSitePrototypeGetTypeNameEiPmPNS0_7IsolateE\n      1  100.0%            Eval: ~<span class=\"token operator\">&lt;</span>anonymous<span class=\"token operator\">></span> internal/per_context/primordials.js:1:1</code></pre></div>\n<p>可以看出使用异步方法 CPU 时钟周期从 600 多次减少到了 150 几次</p>","frontmatter":{"title":"使用 Tick Processor 分析 CPU 使用情况","date":null,"description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/debug/tick-processor/","previous":{"fields":{"slug":"/debug/cpu-monitor/"},"frontmatter":{"title":"Node.js 内存调试之 cpu-memory-monitor"}},"next":null}}}