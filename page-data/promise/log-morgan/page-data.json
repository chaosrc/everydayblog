{"componentChunkName":"component---src-templates-blog-post-js","path":"/promise/log-morgan/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"0fc664b0-f5fe-5839-9357-820122322eca","excerpt":"Node.js 日志中间件 morganmorgan 是一个 Node.js 日志中间件，下面将介绍如何使用 morgan基本使用上面的代码创建了一个 express web 服务，使用 morgan 中间件打印每一次请求的日志调用 方法会创建一个日志中间件，参数 format…","html":"<h2>Node.js 日志中间件 morgan</h2>\n<p>morgan 是一个 Node.js 日志中间件，下面将介绍如何使用 morgan</p>\n<h4>基本使用</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> morgan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'morgan'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'combined'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>上面的代码创建了一个 express web 服务，使用 morgan 中间件打印每一次请求的日志</p>\n<p>调用<code class=\"language-text\">morgan(format, options)</code> 方法会创建一个日志中间件，参数 format 可以是内置的格式化输出，也可以自定义格式化输出</p>\n<h4>内置格式化输出</h4>\n<ul>\n<li>tiny</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'tiny'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>格式为</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token punctuation\">:</span>method <span class=\"token punctuation\">:</span>url <span class=\"token punctuation\">:</span>status <span class=\"token punctuation\">:</span>res<span class=\"token punctuation\">[</span>content<span class=\"token operator\">-</span>length<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">:</span>response<span class=\"token operator\">-</span>time ms</code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">::1 - - <span class=\"token punctuation\">[</span>25/Aug/2019:10:21:44 +0000<span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> 200 - <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"curl/7.54.0\"</span></code></pre></div>\n<ul>\n<li>combined</li>\n</ul>\n<p>标准的 Apache combined 输出</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'combined'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>格式</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:remote-addr - :remote-user <span class=\"token punctuation\">[</span>:date<span class=\"token punctuation\">[</span>clf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\":method :url HTTP/:http-version\"</span> :status :res<span class=\"token punctuation\">[</span>content-length<span class=\"token punctuation\">]</span> <span class=\"token string\">\":referrer\"</span> <span class=\"token string\">\":user-agent\"</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">::1 - - <span class=\"token punctuation\">[</span>25/Aug/2019:10:55:38 +0000<span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> 200 - <span class=\"token string\">\"-\"</span> <span class=\"token string\">\"curl/7.54.0\"</span></code></pre></div>\n<ul>\n<li>combined</li>\n</ul>\n<p>标准的 Apache common 输出</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'common'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>格式</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">:remote-addr - :remote-user <span class=\"token punctuation\">[</span>:date<span class=\"token punctuation\">[</span>clf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span> <span class=\"token string\">\":method :url HTTP/:http-version\"</span> :status :res<span class=\"token punctuation\">[</span>content-length<span class=\"token punctuation\">]</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">::1 - - <span class=\"token punctuation\">[</span>25/Aug/2019:10:58:30 +0000<span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> 200 -</code></pre></div>\n<h4>将日志输出到文件</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> morgan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'morgan'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> fs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'fs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> logStream <span class=\"token operator\">=</span> fs<span class=\"token punctuation\">.</span><span class=\"token function\">createWriteStream</span><span class=\"token punctuation\">(</span>path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'access.log'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'common'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>stream<span class=\"token punctuation\">:</span> logStream<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>上面的代码创建了一个 WriteStream 对象，设置 morgan 输出到 WriteStream，每一次请求日志将输出至 access.log 文件</p>\n<div class=\"gatsby-highlight\" data-language=\"bash\"><pre class=\"language-bash\"><code class=\"language-bash\">$ <span class=\"token function\">cat</span> access.log \n::1 - - <span class=\"token punctuation\">[</span>25/Aug/2019:11:15:24 +0000<span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> 200 -\n::1 - - <span class=\"token punctuation\">[</span>25/Aug/2019:11:15:26 +0000<span class=\"token punctuation\">]</span> <span class=\"token string\">\"GET / HTTP/1.1\"</span> 200 -</code></pre></div>\n<h4>日志分割</h4>\n<p>前面设置了日志输出至文件但是随着日志的增加文件体积会越来越大，使用 <code class=\"language-text\">rotating-file-stream</code> 模块可以将日志输出按日期分割</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> express <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'express'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> morgan <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'morgan'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> rfs <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'rotating-file-stream'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> app <span class=\"token operator\">=</span> <span class=\"token function\">express</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> logStream <span class=\"token operator\">=</span> <span class=\"token function\">rfs</span><span class=\"token punctuation\">(</span><span class=\"token string\">'access.log'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    interval<span class=\"token punctuation\">:</span> <span class=\"token string\">'1d'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 设置日志按日分割</span>\n    path<span class=\"token punctuation\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'logs'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'common'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>stream<span class=\"token punctuation\">:</span> logStream<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">use</span><span class=\"token punctuation\">(</span><span class=\"token function\">morgan</span><span class=\"token punctuation\">(</span><span class=\"token string\">'dev'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">req<span class=\"token punctuation\">,</span> res</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    res<span class=\"token punctuation\">.</span><span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Hello World'</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n\napp<span class=\"token punctuation\">.</span><span class=\"token function\">listen</span><span class=\"token punctuation\">(</span><span class=\"token number\">8001</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>通过配置 <code class=\"language-text\">rotating-file-stream</code> 的 <code class=\"language-text\">interval</code> 参数设置日志分割的时间，<code class=\"language-text\">path</code> 指定日志文件的存储位置</p>","frontmatter":{"title":"Node.js 日志中间件 morgan","date":"August 25, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/promise/log-morgan/","previous":{"fields":{"slug":"/promise/vscode-debug/"},"frontmatter":{"title":"使用 Visual Studio Code 调试代码"}},"next":{"fields":{"slug":"/sql/know-sql/"},"frontmatter":{"title":"数据库基础"}}}}}