{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-join-1/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"a0cc5681-5a51-5843-ab55-00cdcd67a800","excerpt":"联结表（一）联结（join）表是 SQL 中最强大的功能之一，很好的理解联结表及其语法是学习 SQL 极为重要的部分。关系表关系表的设计就是把信息分解成多个表，一类数据一个表，各个表通过某些共同值互相关联，可以更有效、方便的处理数据联结使用关系表将数据存储在多个表中后，如何使用一条 SELECT…","html":"<h2>联结表（一）</h2>\n<p>联结（join）表是 SQL 中最强大的功能之一，很好的理解联结表及其语法是学习 SQL 极为重要的部分。</p>\n<h4>关系表</h4>\n<p>关系表的设计就是把信息分解成多个表，一类数据一个表，各个表通过某些共同值互相关联，可以更有效、方便的处理数据</p>\n<h4>联结</h4>\n<p>使用关系表将数据存储在多个表中后，如何使用一条 SELECT 语句就能检索出数据？答案是使用联结，联结是一种机制，用来在一条 SELECT 语句中关联表</p>\n<h4>创建联结</h4>\n<p>创建联结表只需要指定需要联结的所有表以及它们的关联方式</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"> <span class=\"token keyword\">SELECT</span> vend_name<span class=\"token punctuation\">,</span> prod_name<span class=\"token punctuation\">,</span> prod_price\n<span class=\"token keyword\">FROM</span> Vendors<span class=\"token punctuation\">,</span> Products\n<span class=\"token keyword\">WHERE</span> Vendors<span class=\"token punctuation\">.</span>vend_id <span class=\"token operator\">=</span> Products<span class=\"token punctuation\">.</span>vend_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Bears R Us<span class=\"token operator\">|</span><span class=\"token number\">8</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">5.99</span>\nBears R Us<span class=\"token operator\">|</span><span class=\"token number\">12</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">8.99</span>\nBears R Us<span class=\"token operator\">|</span><span class=\"token number\">18</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">11.99</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Fish bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Bird bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Rabbit bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Raggedy Ann<span class=\"token operator\">|</span><span class=\"token number\">4.99</span>\nFun <span class=\"token operator\">and</span> Games<span class=\"token operator\">|</span>King doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span>\nFun <span class=\"token operator\">and</span> Games<span class=\"token operator\">|</span>Queen doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span></code></pre></div>\n<p>上面的 SQL 语句中 FROM 子句列出了两个表： Vendors 和 Products，这是 SELECT 语句联结的两个表名，在 SELECT 语句中有三个列，vend<em>name 在 Vendors 表中，prod</em>name 和 prod<em>price 在 Products 表中，通过 WHERE 子句将两个表通过 vend</em>id 正确的联结\t</p>\n<h4>WHERE 子句的重要性</h4>\n<p>上面的联结是通过 WHERE 子句进行过滤条件，只包含那些满足联结条件的行。没有 WHERE 子句的联结返回的结果为笛卡尔积，即第一个表中的每一行都会与第二个表中的每一行匹配</p>\n<p>在使用联结是需要保证在所有的联结中都有 WHERE 子句，同时要保证 WHERE 子句的正确性</p>\n<h4>内联结</h4>\n<p>前面使用的联结称为等值联结，它是基于两个表之间的相等测试，这种联结也称为内联结。对于这种联结也可以使用另一个语法，明确指定联结的类型</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> vend_name<span class=\"token punctuation\">,</span> prod_name<span class=\"token punctuation\">,</span> prod_price\n<span class=\"token keyword\">FROM</span> Vendors <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> Products\n<span class=\"token keyword\">ON</span> Vendors<span class=\"token punctuation\">.</span>vend_id <span class=\"token operator\">=</span> Products<span class=\"token punctuation\">.</span>vend_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Bears R Us<span class=\"token operator\">|</span><span class=\"token number\">8</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">5.99</span>\nBears R Us<span class=\"token operator\">|</span><span class=\"token number\">12</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">8.99</span>\nBears R Us<span class=\"token operator\">|</span><span class=\"token number\">18</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">11.99</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Fish bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Bird bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Rabbit bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nDoll House Inc<span class=\"token punctuation\">.</span><span class=\"token operator\">|</span>Raggedy Ann<span class=\"token operator\">|</span><span class=\"token number\">4.99</span>\nFun <span class=\"token operator\">and</span> Games<span class=\"token operator\">|</span>King doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span>\nFun <span class=\"token operator\">and</span> Games<span class=\"token operator\">|</span>Queen doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span></code></pre></div>\n<p>上面的 SELECT 语句的 FROM 子句中明确指定了联结的类型为 INNER JOIN，与前面的 SQL 语句是等同的，同时联结条件使用 ON 子句而不是 WHERE 子句，ON 子句的条件与 WHERE 子句相同</p>\n<h4>联结多个表</h4>\n<p>SQL 语句中不限制一条 SELECT 语句中联结表的数目。创建多个联结表的规则与两个表相同</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> prod_name<span class=\"token punctuation\">,</span> vend_name<span class=\"token punctuation\">,</span> prod_price<span class=\"token punctuation\">,</span> quantity\n<span class=\"token keyword\">FROM</span> Products<span class=\"token punctuation\">,</span> vendors<span class=\"token punctuation\">,</span> OrderItems\n<span class=\"token keyword\">WHERE</span> Products<span class=\"token punctuation\">.</span>vend_id <span class=\"token operator\">=</span> Vendors<span class=\"token punctuation\">.</span>vend_id\n<span class=\"token operator\">AND</span> Products<span class=\"token punctuation\">.</span>prod_id <span class=\"token operator\">=</span> OrderItems<span class=\"token punctuation\">.</span>prod_id\n<span class=\"token operator\">AND</span> order_num <span class=\"token operator\">=</span> <span class=\"token number\">20005</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">8</span> inch teddy bear<span class=\"token operator\">|</span>Bears R Us<span class=\"token operator\">|</span><span class=\"token number\">5.99</span><span class=\"token operator\">|</span><span class=\"token number\">100</span>\n<span class=\"token number\">18</span> inch teddy bear<span class=\"token operator\">|</span>Bears R Us<span class=\"token operator\">|</span><span class=\"token number\">11.99</span><span class=\"token operator\">|</span><span class=\"token number\">100</span></code></pre></div>\n<p>上面的 SQL 语句检索了订单号为 20005 的物品。在 OrderItems 表中存储了订单信息，通过产品 id（prod<em>id），在 Products 表中关联到对应的产品，通过 Products 中的供应商 id（vend</em>id）在 Vendors 表中关联到供应商的记录。第三个关联条件 AND order_num = 20005 过滤订单号为 20005 的物品</p>\n<p>SELECT cust<em>name, cust</em>contact\nFROM Customers INNER JOIN Orders INNER JOIN OrderItems\nON Customers.cust<em>id = Orders.cust</em>id\nAND Orders.order<em>num = OrderItems.order</em>num\nAND OrderItems.prod_id = ‘RGAN01’;</p>","frontmatter":{"title":"联结表（一）","date":"September 14, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-join-1/","previous":{"fields":{"slug":"/sql/sql-child-query/"},"frontmatter":{"title":"使用子查询"}},"next":{"fields":{"slug":"/sql/sql-join-2/"},"frontmatter":{"title":"联结表（二）"}}}}}