{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-select-filter/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"5e282ccb-b96f-5ed6-95aa-d40c297df120","excerpt":"过滤数据（一）使用 WHERE 子句数据表一般包含大量的数据，而通常只需要根据特定的要求检索表中的部分行，而不是所有行。在 SELECT 语句中，数据根据 WHERE 子句中特定的搜索条件进行过滤。输入输出上面的 SQL 语句检索两个列，但是只返回 prod_price 为 3.49 的行WHERE…","html":"<h2>过滤数据（一）</h2>\n<h4>使用 WHERE 子句</h4>\n<p>数据表一般包含大量的数据，而通常只需要根据特定的要求检索表中的部分行，而不是所有行。</p>\n<p>在 SELECT 语句中，数据根据 WHERE 子句中特定的搜索条件进行过滤。</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> prod_name<span class=\"token punctuation\">,</span> prod_price\n<span class=\"token keyword\">FROM</span> Products\n<span class=\"token keyword\">WHERE</span> prod_price <span class=\"token operator\">=</span> <span class=\"token number\">3.49</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Fish bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nBird bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nRabbit bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span></code></pre></div>\n<p>上面的 SQL 语句检索两个列，但是只返回 prod_price 为 3.49 的行</p>\n<h4>WHERE 子句操作符</h4>\n<table>\n<thead>\n<tr>\n<th align=\"center\">操作符</th>\n<th>说明</th>\n<th align=\"center\">操作符</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\">=</td>\n<td>等于</td>\n<td align=\"center\">></td>\n<td>大于</td>\n</tr>\n<tr>\n<td align=\"center\">&#x3C;></td>\n<td>不等于</td>\n<td align=\"center\">>=</td>\n<td>大于等于</td>\n</tr>\n<tr>\n<td align=\"center\">!=</td>\n<td>不等于</td>\n<td align=\"center\">!></td>\n<td>不大于</td>\n</tr>\n<tr>\n<td align=\"center\">&#x3C;</td>\n<td>小于</td>\n<td align=\"center\">BETWEEN</td>\n<td>在指定的两值之间</td>\n</tr>\n<tr>\n<td align=\"center\">&#x3C;=</td>\n<td>小于等于</td>\n<td align=\"center\">IS NULL</td>\n<td>为 NULL 值</td>\n</tr>\n<tr>\n<td align=\"center\">!&#x3C;</td>\n<td>不小于</td>\n<td align=\"center\"></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>上面的操作符并非所有的数据库都支持，想要确定是否支持需要查看相应文档</p>\n</blockquote>\n<h4>大于/小于检查</h4>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> prod_name<span class=\"token punctuation\">,</span> prod_price\n<span class=\"token keyword\">FROM</span> Products\n<span class=\"token keyword\">WHERE</span> prod_price <span class=\"token operator\">&lt;</span> <span class=\"token number\">10</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">8</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">5.99</span>\n<span class=\"token number\">12</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">8.99</span>\nFish bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nBird bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nRabbit bean bag toy<span class=\"token operator\">|</span><span class=\"token number\">3.49</span>\nRaggedy Ann<span class=\"token operator\">|</span><span class=\"token number\">4.99</span>\nKing doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span>\nQueen doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span></code></pre></div>\n<p>上面的 SQL 语句检索出了所有价格小于 10 的产品</p>\n<h4>不匹配检查</h4>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> vend_id<span class=\"token punctuation\">,</span> prod_name\n<span class=\"token keyword\">FROM</span> Products\n<span class=\"token keyword\">WHERE</span> vend_id <span class=\"token operator\">&lt;></span> <span class=\"token string\">'DLL01'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">BRS01<span class=\"token operator\">|</span><span class=\"token number\">8</span> inch teddy bear\nBRS01<span class=\"token operator\">|</span><span class=\"token number\">12</span> inch teddy bear\nBRS01<span class=\"token operator\">|</span><span class=\"token number\">18</span> inch teddy bear\nFNG01<span class=\"token operator\">|</span>King doll\nFNG01<span class=\"token operator\">|</span>Queen doll</code></pre></div>\n<p>使用了 &#x3C;> 不等于操作符来过滤掉 vend_id 为 DLL01 的行</p>\n<h4>范围值检查</h4>\n<p>如果要查看某个范围的值，可以使用 BETWEEN 操作符。BETWEEN 操作符需要指定两个值一个开始值一个结束值。</p>\n<p>检索价格在 5 至 10 之间的所有产品</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> prod_name<span class=\"token punctuation\">,</span> prod_price\n<span class=\"token keyword\">FROM</span> Products\n<span class=\"token keyword\">WHERE</span> prod_price <span class=\"token operator\">BETWEEN</span> <span class=\"token number\">5</span> <span class=\"token operator\">AND</span> <span class=\"token number\">10</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">8</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">5.99</span>\n<span class=\"token number\">12</span> inch teddy bear<span class=\"token operator\">|</span><span class=\"token number\">8.99</span>\nKing doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span>\nQueen doll<span class=\"token operator\">|</span><span class=\"token number\">9.49</span></code></pre></div>\n<p>在使用 BETWEEN 时，指定开始值和结束值，用 AND 关键字分隔，检索出所有开始值和结束值之间的值，包括开始值和结束值</p>\n<h4>空值检查</h4>\n<p>在创建表时，可以指定列的值是否能为空，如果可以为空那么这个空值为 NULL</p>\n<blockquote>\n<p>NULL 值与 0，空字符串以及空格值并不相同</p>\n</blockquote>\n<p>要确定值是否为 NULL 不能简单的检查 = NULL。SELECT 语句中有一个特殊的 WHERE 子句 <code class=\"language-text\">IS NULL</code> 用来检查是否为 NULL 值。</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> cust_name\n<span class=\"token keyword\">FROM</span> Customers\n<span class=\"token keyword\">WHERE</span> cust_email <span class=\"token operator\">IS</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Kids Place\nThe Toy Store</code></pre></div>\n<p>上面的 SQL 语句通过 <code class=\"language-text\">WHERE cust_email IS NULL</code> 来过滤 cust_email 为 NULL 的列</p>","frontmatter":{"title":"过滤数据（一）","date":"August 31, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-select-filter/","previous":{"fields":{"slug":"/sql/sql-select-order_1/"},"frontmatter":{"title":"排序检索数据"}},"next":{"fields":{"slug":"/sql/sql-select-filter-2/"},"frontmatter":{"title":"过滤数据（二）"}}}}}