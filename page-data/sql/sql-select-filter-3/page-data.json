{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-select-filter-3/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"0e2288a5-c777-55ef-93ec-d6b44ad73288","excerpt":"数据过滤（三）IN 操作符IN 操作符用来指定特定的条件范围，范围中的每个条件都可以进行匹配。IN 取一组由逗号分隔，括在圆括号中的合法值。输入输出SmartSelect_20190902-082604_Termux上面的 SELECT 语句检索由供应商 DLL01 和 BRS01 制造的所有产品。IN…","html":"<h2>数据过滤（三）</h2>\n<h4>IN 操作符</h4>\n<p>IN 操作符用来指定特定的条件范围，范围中的每个条件都可以进行匹配。IN 取一组由逗号分隔，括在圆括号中的合法值。</p>\n<p>输入</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niOam8.jpg\"></p>\n<p>输出</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niOBkQ.jpg\" alt=\"SmartSelect_20190902-082604_Termux\"></p>\n<p>上面的 SELECT 语句检索由供应商 DLL01 和 BRS01 制造的所有产品。IN 操作符中的值用逗号分隔且必须在圆括号内。</p>\n<p>其实使用 OR 操作符也能到达相同的效果</p>\n<p>输入\n<img src=\"https://s2.ax1x.com/2019/09/02/niOJSI.jpg\"></p>\n<p>输出\n<img src=\"https://s2.ax1x.com/2019/09/02/niOt6P.jpg\"></p>\n<p>使用 IN 操作符的优点：</p>\n<ul>\n<li>在有很多选项时 IN 操作符更加清楚直观</li>\n<li>在与其他 AND 和 OR 组合使用 IN 时求值顺序更容易管理</li>\n<li>IN 操作符一般比一组 OR 操作符执行得更快</li>\n<li>IN 语句中还可以包含其他的 SELECT 语句，能够更动态\n的建立 WHERE 子句</li>\n</ul>\n<h4>NOT 操作符</h4>\n<p>WHERE 子句中的 NOT 操作符有且只有一个功能，那就是否定它后面所跟的任何条件。</p>\n<p>输入</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niOd0S.jpg\"></p>\n<p>输出</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niODYj.jpg\"></p>\n<p>上面的 SQL 语句中 NOT 否定了它后面的条件，检索出所有 vend_id 不是 DLL01 的所有产品</p>\n<p>上面的语句也可以使用 != 来实现</p>\n<p>输入</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niO8fA.jpg\"></p>\n<p>输出</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niOwTg.jpg\"></p>\n<p>虽然 != 在这个语句中也同样能满足需求，但是在更加复杂的语句中 NOT 是非常有用的，比如 NOT 与 IN 组合，可以非常简单的找出与 IN 中条件列表不匹配的行</p>\n<p>输入</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niOYlt.jpg\"></p>\n<p>输出</p>\n<p><img src=\"https://s2.ax1x.com/2019/09/02/niONOf.jpg\"></p>","frontmatter":{"title":"数据过滤（三）","date":"September 02, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-select-filter-3/","previous":{"fields":{"slug":"/sql/sql-select-filter-2/"},"frontmatter":{"title":"过滤数据（二）"}},"next":{"fields":{"slug":"/sql/sql-select-like/"},"frontmatter":{"title":"使用通配符进行过滤"}}}}}