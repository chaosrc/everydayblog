{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-select-like-2/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"85a932c6-2ee6-5e53-b3da-4d4c76861365","excerpt":"用通配符进行过滤（二）下划线（_）通配符下划线通配符也是一个非常有用的通配符，它与 % 通配符的用途很相似，但是它只匹配单个字符，而不是多个字符。输入输出上面的 SQL 语句使用了两个 _ 通配符匹配，只有同时匹配两个操作符的行会被检索出来，比如第一行匹配 12， 第二行匹配 18。对比 % 操作符，执行下面的 SQL…","html":"<h2>用通配符进行过滤（二）</h2>\n<h4>下划线（_）通配符</h4>\n<p>下划线通配符也是一个非常有用的通配符，它与 % 通配符的用途很相似，但是它只匹配单个字符，而不是多个字符。</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> prod_id<span class=\"token punctuation\">,</span> prod_name\n<span class=\"token keyword\">FROM</span> Products\n<span class=\"token keyword\">WHERE</span> prod_name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'__ inch teddy bear'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">BR02<span class=\"token operator\">|</span><span class=\"token number\">12</span> inch teddy bear\nBR03<span class=\"token operator\">|</span><span class=\"token number\">18</span> inch teddy bear</code></pre></div>\n<p>上面的 SQL 语句使用了两个 _ 通配符匹配，只有同时匹配两个操作符的行会被检索出来，比如第一行匹配 12， 第二行匹配 18。对比 % 操作符，执行下面的 SQL </p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> prod_id<span class=\"token punctuation\">,</span> prod_name\n<span class=\"token keyword\">FROM</span> Products\n<span class=\"token keyword\">WHERE</span> prod_name <span class=\"token operator\">LIKE</span> <span class=\"token string\">'% inch teddy bear'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">BR01<span class=\"token operator\">|</span><span class=\"token number\">8</span> inch teddy bear\nBR02<span class=\"token operator\">|</span><span class=\"token number\">12</span> inch teddy bear\nBR03<span class=\"token operator\">|</span><span class=\"token number\">18</span> inch teddy bear</code></pre></div>\n<p>在使用两个 _ 通配符时，第一行 8 就没有匹配因为 8 只匹配一个 _ 通配符。</p>\n<p>与 % 匹配多个字符不同，_ 只能匹配一个字符，即不能多也不能少</p>\n<h4>方括号（[]）通配符</h4>\n<p>方括号（[]）通配符可以用来指定一个字符集, 搜索结果必须匹配指定集合中的一个字符</p>\n<p>需要注意的是支持方括号（[]）通配符的数据库比较少，现在只有 Access 和 SQL Server 支持。</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> cust_contact\n<span class=\"token keyword\">FROM</span> Customers\n<span class=\"token keyword\">Where</span> cust_contact <span class=\"token operator\">LIKE</span> <span class=\"token string\">'[JM]%'</span> </code></pre></div>\n<p>上面的 SQL 语句匹配所有名字以 J 或 M 开头的行。</p>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">Jim Jones\nJohn Smith\nMichelle Green</code></pre></div>\n<h4>通配符使用总结</h4>\n<p>SQL 的通配符很有用，但是通配符的搜索比一般的搜索要消费更长的时间。在使用通配符是尽量遵循下面的原则：</p>\n<ul>\n<li>不要过度使用通配符，如果其他的操作符能够到达相同的目的，应该优先使用其他操作符</li>\n<li>在确实要使用通配符时，尽量不要把通配符放在开始出，因为通配符在开始处时搜索起来最慢</li>\n<li>注意通配符的位置，如果放错位置，可能不会返回想要的数据</li>\n</ul>","frontmatter":{"title":"用通配符进行过滤（二）","date":"September 04, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-select-like-2/","previous":{"fields":{"slug":"/sql/sql-select-like/"},"frontmatter":{"title":"使用通配符进行过滤"}},"next":{"fields":{"slug":"/sql/sql-computed-field/"},"frontmatter":{"title":"创建计算字段"}}}}}