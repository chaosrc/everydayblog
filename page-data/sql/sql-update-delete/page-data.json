{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-update-delete/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"f1cb8667-e3b6-5093-a300-fd8d09d61955","excerpt":"更新和删除数据更新数据更新表的数据可以用 UPDATE 语句。UPDATE 语句有两种使用方式：更新表中特定的行更新表中所有行UPDATE 语句由三部分组成：需要更新的表列名和它的新值需要更新哪些行的过滤条件输入上面的 UPDATE 语句对 Customers 表中 cust_id 为 100000000…","html":"<h2>更新和删除数据</h2>\n<h4>更新数据</h4>\n<p>更新表的数据可以用 UPDATE 语句。UPDATE 语句有两种使用方式：</p>\n<ul>\n<li>更新表中特定的行</li>\n<li>更新表中所有行</li>\n</ul>\n<p>UPDATE 语句由三部分组成：</p>\n<ul>\n<li>需要更新的表</li>\n<li>列名和它的新值</li>\n<li>需要更新哪些行的过滤条件</li>\n</ul>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> Customers\n<span class=\"token keyword\">SET</span> cust_email <span class=\"token operator\">=</span> <span class=\"token string\">'abc@qq.com'</span>\n<span class=\"token keyword\">WHERE</span> cust_id <span class=\"token operator\">=</span> <span class=\"token string\">'1000000005'</span></code></pre></div>\n<p>上面的 UPDATE 语句对 Customers 表中 cust_id 为 1000000005 的顾客更新 Email 地址</p>\n<p>UPDATE 语句通过 WHERE 子句来告诉数据库需要更新哪些行，<strong>如果没有 WHERE 子句则会更新所有行</strong></p>\n<p>更新多个列</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">UPDATE</span> Customers\n<span class=\"token keyword\">set</span> cust_contact <span class=\"token operator\">=</span> <span class=\"token string\">'Sam Roberts'</span><span class=\"token punctuation\">,</span>\n    cust_email <span class=\"token operator\">=</span> <span class=\"token string\">'san@toyland.com'</span>\n<span class=\"token keyword\">WHERE</span> cust_id <span class=\"token operator\">=</span> <span class=\"token string\">'100000006'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>更新多列时只需使用一条 SET 命令，每一个 “列=值” 之间用逗号分隔</p>\n<h4>删除数据</h4>\n<p>从表中删除数据使用 DELETE 语句。同样 DELETE 语句有两种使用方式：</p>\n<ul>\n<li>从表中删除特定的行</li>\n<li>从表中删除所有行</li>\n</ul>\n<p>从 Customers 表中删除一行</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">DELETE</span> <span class=\"token keyword\">FROM</span> Customers\n<span class=\"token keyword\">WHERE</span> cust_id <span class=\"token operator\">=</span> <span class=\"token string\">'100000006'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面的 SQL 语句删除了 Customers 表中 cust_id 为 100000006 的行，DELETE FROM 后面为需要删除数据的表名，WHERE 子句过滤要删掉的行，如果省略 WHERE 子句将会删除所有行</p>\n<p>DELETE 语句从表中删除行，甚至所有行，但是 DELETE 语句不删除表本身</p>\n<h4>删除和更新数据的原则</h4>\n<ul>\n<li>除非确实想要删除或更新所有数据，否则一定要带上 WHERE 子句</li>\n<li>保证每个表都有主键</li>\n<li>在使用 UPDATE 或 DELETE 语句之前，先用 SELECT 语句进行测试，保证 WHERE 子句是正确的</li>\n<li>如果数据库支持添加对不带 WHERE 子句的更新或删除语句进行约束，那么应该尽可能添加约束</li>\n</ul>","frontmatter":{"title":"更新和删除数据","date":"September 20, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-update-delete/","previous":{"fields":{"slug":"/sql/sql-insert-1/"},"frontmatter":{"title":"数据插入"}},"next":{"fields":{"slug":"/sql/sql-create-table/"},"frontmatter":{"title":"创建和操控表（一）"}}}}}