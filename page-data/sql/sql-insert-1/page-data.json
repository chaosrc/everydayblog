{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-insert-1/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"a6b750b7-6671-51e3-9d2d-cecb0482eb0a","excerpt":"数据插入在 SQL 中使用 INSERT 将行插入或添加到数据库的表中，插入数据的几种方式：插入完整的行插入行的一部分插入某些查询的结果插入完整的行输入上面的 SQL 语句将一条新的顾客数据插入到了 Customers 表中，在 VALUE 中列出每一列的数据，而且必须每一列提供一个值，如果没有值应该输入 NULL…","html":"<h2>数据插入</h2>\n<p>在 SQL 中使用 INSERT 将行插入或添加到数据库的表中，插入数据的几种方式：</p>\n<ul>\n<li>插入完整的行</li>\n<li>插入行的一部分</li>\n<li>插入某些查询的结果</li>\n</ul>\n<h4>插入完整的行</h4>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Customers \n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'100000006'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Toy Land'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123 Any Street'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'11111'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'USA'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面的 SQL 语句将一条新的顾客数据插入到了 Customers 表中，在 VALUE 中列出每一列的数据，而且必须每一列提供一个值，如果没有值应该输入 NULL 值。每一列必须以它们在表中定义的次序填充</p>\n<p>使用这种方式语法很简单，但是高度依赖表中列的定义次序，不能保证每一次表结构改变后保持相同的次序，因此这种方式很不安全</p>\n<p>下面使用更加安全的方式</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Customers<span class=\"token punctuation\">(</span>cust_id<span class=\"token punctuation\">,</span> cust_name<span class=\"token punctuation\">,</span> cust_address<span class=\"token punctuation\">,</span> cust_city<span class=\"token punctuation\">,</span> cust_state<span class=\"token punctuation\">,</span> cust_zip<span class=\"token punctuation\">,</span> cust_country<span class=\"token punctuation\">,</span> cust_contact<span class=\"token punctuation\">,</span> cust_email<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'100000007'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Toy Land'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123 Any Street'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'11111'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'USA'</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面的语句与前一个 INSERT 语句的作用完全相同，但是在表名后面的括号里明确指出了列名，在插入行时将 VALUES 列表中的值填入对应的列中，列名的顺序不一定要是表中出现的顺序，即使表结构改变，INSERT 语句仍然能够正常工作</p>\n<h4>插入部分行</h4>\n<p>在使用 INSERT 时指定列名的另一个好处是可以省略不需要插入值的列</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Customers<span class=\"token punctuation\">(</span>cust_id<span class=\"token punctuation\">,</span> cust_name<span class=\"token punctuation\">,</span> cust_address<span class=\"token punctuation\">,</span> cust_city<span class=\"token punctuation\">,</span> cust_state<span class=\"token punctuation\">,</span> cust_zip<span class=\"token punctuation\">,</span> cust_country<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">VALUES</span> <span class=\"token punctuation\">(</span><span class=\"token string\">'100000008'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Toy Land'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'123 Any Street'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'New York'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'NY'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'11111'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'USA'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面的 INSERT 语句中省略了 cust<em>contact 和 cust</em>email 两列</p>\n<p>省略列需要满足以下条件之一：</p>\n<ul>\n<li>该列定义为允许 NULL 值</li>\n<li>在表定义中给出了默认值</li>\n</ul>\n<h4>插入检索出的数据</h4>\n<p>INSERT 语句还存在另一种形式，可以利用它将 SELECT 语句的结果插入表中，即 INSERT SELECT，由一条 INSERT 语句和 SELECT 语句组成</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">INSERT</span> <span class=\"token keyword\">INTO</span> Customers<span class=\"token punctuation\">(</span>cust_id<span class=\"token punctuation\">,</span> cust_name<span class=\"token punctuation\">,</span> cust_address<span class=\"token punctuation\">,</span> cust_city<span class=\"token punctuation\">,</span> cust_state<span class=\"token punctuation\">,</span> cust_zip<span class=\"token punctuation\">,</span> cust_country<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">SELECT</span> cust_id<span class=\"token punctuation\">,</span> cust_name<span class=\"token punctuation\">,</span> cust_address<span class=\"token punctuation\">,</span> cust_city<span class=\"token punctuation\">,</span> cust_state<span class=\"token punctuation\">,</span> cust_zip<span class=\"token punctuation\">,</span> cust_country \n<span class=\"token keyword\">FROM</span> CustNew<span class=\"token punctuation\">;</span></code></pre></div>\n<p>上面的 INSERT SELECT 从 CustNew 中所有数据导入 Customers 表中，SELECT 中对应于 Customers 中的每一列，插入的行数处决于 SELECT 语句检索出的行数</p>\n<h4>从一个表复制到另一个表</h4>\n<p>INSERT INTO 可以将数据复制到一个以及存在的表中，而SELECT INTO 语句可以将一个表的内容复制到一个全新的表中</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> \n<span class=\"token keyword\">INTO</span> CustCopy\n<span class=\"token keyword\">FROM</span> Customers<span class=\"token punctuation\">;</span></code></pre></div>\n<p>这条 SELECT 语句创建一个名为 CustCopy 的新表，并将 Customers 表的内容复制到新的表中。如果只想复制部分列可以明确指出列名，而不是使用通配符 *</p>\n<p>在 MySQL、SQLite 以及 PostgreSQL 等数据库中使用的语法稍有不同：</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">CREATE</span> <span class=\"token keyword\">TABLE</span> CustCopy <span class=\"token keyword\">AS</span> \n<span class=\"token keyword\">SELECT</span> <span class=\"token operator\">*</span> <span class=\"token keyword\">FROM</span> Customers<span class=\"token punctuation\">;</span></code></pre></div>\n<p>使用 SELECT INTO 需要知道的一些事情：</p>\n<ul>\n<li>可以使用任何 SELECT 选项和子句，包括 WHERE 和 GROUP BY</li>\n<li>可以利用联结从多个表插入数据</li>\n<li>不管从多少个表中检索数据，只能插入一个表中</li>\n</ul>","frontmatter":{"title":"数据插入","date":"September 19, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-insert-1/","previous":{"fields":{"slug":"/sql/sql-union-2/"},"frontmatter":{"title":"组合查询（二）"}},"next":{"fields":{"slug":"/sql/sql-update-delete/"},"frontmatter":{"title":"更新和删除数据"}}}}}