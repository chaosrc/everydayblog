{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-function-2/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"2262ede6-5f8a-5cdc-ba5c-ac0395941ba3","excerpt":"使用函数处理数据（二）时间和日历处理函数每个数据库在表中存储日期和时间类型的数据都有自己的特殊形式，日期和时间值以特殊的格式储存，以便能够快速有效的排序和过滤，并且可以节省物理存储空间以下的 SQL 是在 SQL Server 中检索 Orders 表中 2012 年所有的订单输入输出上面的 SQL…","html":"<h2>使用函数处理数据（二）</h2>\n<h4>时间和日历处理函数</h4>\n<p>每个数据库在表中存储日期和时间类型的数据都有自己的特殊形式，日期和时间值以特殊的格式储存，以便能够快速有效的排序和过滤，并且可以节省物理存储空间</p>\n<p>以下的 SQL 是在 SQL Server 中检索 Orders 表中 2012 年所有的订单</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> order_num \n<span class=\"token keyword\">FROM</span> Orders\n<span class=\"token keyword\">WHERE</span> DATEPART<span class=\"token punctuation\">(</span>yy<span class=\"token punctuation\">,</span> order_date<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2002</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">20005</span>\n<span class=\"token number\">20006</span>\n<span class=\"token number\">20007</span>\n<span class=\"token number\">20008</span>\n<span class=\"token number\">20009</span></code></pre></div>\n<p>上面的 SQL 语句使用了 DATEPART() 函数返回日期的某一部分。DATEPART() 函数有两个参数，它们分别是日期值中返回的部分和日期值。上面 SQL 中 DATEPART() 返回 order_date 中的年份,然后与 2012 进行比较，从而过滤出 2012 年的所有行。</p>\n<p>同样的功能在 PostgreSQL 是使用 DATE_PAERT 函数</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> order_name\n<span class=\"token keyword\">FROM</span> Orders\n<span class=\"token keyword\">WHERE</span> DATA_PART<span class=\"token punctuation\">(</span><span class=\"token string\">'year'</span><span class=\"token punctuation\">,</span> order_date <span class=\"token operator\">=</span> <span class=\"token number\">2012</span></code></pre></div>\n<p>在 MySQL 和 MarialDN 中使用 YEAR() 函数提取日期中的年份</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> order_num \n<span class=\"token keyword\">FROM</span> Orders\n<span class=\"token keyword\">WHERE</span> YAER<span class=\"token punctuation\">(</span>order_date<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token number\">2002</span></code></pre></div>\n<p>在 SQLite 中使用 strftime(),获取年份</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token number\">0</span>rder_name\n<span class=\"token keyword\">FROM</span> Orders\n<span class=\"token keyword\">WHERE</span> strftime<span class=\"token punctuation\">(</span><span class=\"token string\">'%Y'</span><span class=\"token punctuation\">,</span> order_date<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token string\">'2012'</span></code></pre></div>\n<h4>数值处理函数</h4>\n<p>数值处理函数一般用来计算数值的代数，三角或几何运算。数值处理函数在大部分数据库是相同的，是最统一最一致的</p>\n<p>常用的数值处理函数</p>\n<table>\n<thead>\n<tr>\n<th>函数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>ABS()</td>\n<td>返回绝对值</td>\n</tr>\n<tr>\n<td>COS()</td>\n<td>返回余玄值</td>\n</tr>\n<tr>\n<td>EXP()</td>\n<td>返回指数值</td>\n</tr>\n<tr>\n<td>PI()</td>\n<td>返回圆周率</td>\n</tr>\n<tr>\n<td>SIN()</td>\n<td>返回正玄值</td>\n</tr>\n<tr>\n<td>SQRT()</td>\n<td>返回平方根</td>\n</tr>\n<tr>\n<td>TAN()</td>\n<td>返回正切值</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>数值处理函数的使用方式，和前面的一样</p>\n</blockquote>\n<h4>总结</h4>\n<p>数据处理函数在数据过滤中非常有用，但是各个数据库的实现可能不一致</p>","frontmatter":{"title":"使用函数处理数据（二）","date":"July 07, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-function-2/","previous":{"fields":{"slug":"/nodejs/nodejs-web-framework-sails/"},"frontmatter":{"title":"Node.js Web 框架之 Sails"}},"next":{"fields":{"slug":"/nodejs/nodejs-web-framework-nest/"},"frontmatter":{"title":"Node.js Web 框架 Nest"}}}}}