{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-group-1/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"5a9a8c18-9692-5d06-8ad2-cf92314858f0","excerpt":"分组数据（一）SQL 中的聚集函数可以汇总数据，能够计算平均值、最大值、最小值等，所有的计算都是表的所有数据或者匹配特定 WHERE 子句的数据，比如：输入输出如果要返回每个供应商的产品数目，或者返回1…","html":"<h2>分组数据（一）</h2>\n<p>SQL 中的聚集函数可以汇总数据，能够计算平均值、最大值、最小值等，所有的计算都是表的所有数据或者匹配特定 WHERE 子句的数据，比如：</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num_prods\n<span class=\"token keyword\">FROM</span> products\n<span class=\"token keyword\">WHERE</span> vend_id <span class=\"token operator\">=</span> <span class=\"token string\">'DLL01'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">4</span></code></pre></div>\n<p>如果要返回每个供应商的产品数目，或者返回10个以上供应商的产品，那么就可以用到分组了。\n使用分组可以将数据分为多个逻辑组，对每个组进行集聚计算。</p>\n<h4>创建分组</h4>\n<p>在 SELECT　语句中使用 GROUP BY 子句建立</p>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> vend_id<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span><span class=\"token operator\">*</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num_prods\n<span class=\"token keyword\">FROM</span> products\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> vend_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">BRS01<span class=\"token operator\">|</span><span class=\"token number\">3</span>\nDLL01<span class=\"token operator\">|</span><span class=\"token number\">4</span>\nFNG01<span class=\"token operator\">|</span><span class=\"token number\">2</span></code></pre></div>\n<p>上面的 SQL 语句指定了两个列：vend<em>id 为产品供应商的 ID，num</em>prods 为 COUNT(*) 计算字段，使用 GROUP BY 子句对 vend<em>id 进行排序并分组，此时 COUNT(*) 会对每个 vend</em>id 的 num_props 进行计算。从输出结果可以看到有三个供应商，分别对应 3、4、2 个产品数量</p>\n<p>使用 GROUP BY 的一些规定：</p>\n<ul>\n<li>GROUP BY 子句可以包含任意数目的列，因此可以对分组进行嵌套，从而进行更细致的数据分组</li>\n<li>如果使用在 GROUP BY 子句中使用了嵌套分组，数据将在最后指定的分组上进行汇总</li>\n<li>GROUP BY 子句中列出的每一列都必须是检索列或者有效表达式，但是不能是聚集函数</li>\n<li>大多数 SQL 实现不允许 GROUP BY 带有长度可变的数据类型，比如文本类型</li>\n<li>除了聚集函数语句外，SELECT 语句中的每一列都必须在 GROUP BY 子句中给出</li>\n<li>如果分组列中包含具有 NULL 值的行，那么 NULL 将作为一个分组返回</li>\n<li>GROUP BY 子句必须出现在 WHERE 子句之后，ORDER BY 子句之前</li>\n</ul>\n<p>使用 GROUP BY 子句嵌套分组</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> vend_id<span class=\"token punctuation\">,</span> prod_price<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>prod_price<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">FROM</span> Products\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> vend_id<span class=\"token punctuation\">,</span> prod_price<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\">BRS01<span class=\"token operator\">|</span><span class=\"token number\">5.99</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\nBRS01<span class=\"token operator\">|</span><span class=\"token number\">8.99</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\nBRS01<span class=\"token operator\">|</span><span class=\"token number\">11.99</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\nDLL01<span class=\"token operator\">|</span><span class=\"token number\">3.49</span><span class=\"token operator\">|</span><span class=\"token number\">3</span>\nDLL01<span class=\"token operator\">|</span><span class=\"token number\">4.99</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\nFNG01<span class=\"token operator\">|</span><span class=\"token number\">9.49</span><span class=\"token operator\">|</span><span class=\"token number\">2</span></code></pre></div>\n<p>上面的 SQL 语句，COUNT(prod<em>price) 计算产品价格的计数，使用 GROUP BY 对 vend</em>id 和 prod_price 进行嵌套分组</p>","frontmatter":{"title":"分组数据（一）","date":"September 11, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-group-1/","previous":{"fields":{"slug":"/sql/sql-collect-function-3/"},"frontmatter":{"title":"聚集函数（三）"}},"next":{"fields":{"slug":"/promise2/"},"frontmatter":{"title":""}}}}}