{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-join-2/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"ad5d6a11-6934-5d6a-a521-3e232ffa1316","excerpt":"联结表（二）联结类型除了内联结或等值联结外，还有三种联结方式：自联结（self-join）、自然联结（natural join）和外联结（outer join）使用表别名SQL 语句中除了可以给列名和计算字段取别名外，还可以对表名取别名。给表取别名主要原因有：缩短 SQL 语句允许在一条 SELECT…","html":"<h2>联结表（二）</h2>\n<p>联结类型除了内联结或等值联结外，还有三种联结方式：自联结（self-join）、自然联结（natural join）和外联结（outer join）</p>\n<h4>使用表别名</h4>\n<p>SQL 语句中除了可以给列名和计算字段取别名外，还可以对表名取别名。给表取别名主要原因有：</p>\n<ul>\n<li>缩短 SQL 语句</li>\n<li>允许在一条 SELECT 语句中多次使用相同的表</li>\n</ul>\n<p>在 SQL 语句中对表使用别名</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> cust_name<span class=\"token punctuation\">,</span> cust_contact\n<span class=\"token keyword\">FROM</span> Customers <span class=\"token keyword\">AS</span> C<span class=\"token punctuation\">,</span> Orders <span class=\"token keyword\">AS</span> O<span class=\"token punctuation\">,</span> OrderItems <span class=\"token keyword\">AS</span> OI\n<span class=\"token keyword\">WHERE</span> C<span class=\"token punctuation\">.</span>cust_id <span class=\"token operator\">=</span> O<span class=\"token punctuation\">.</span>cust_id\n<span class=\"token operator\">AND</span> O<span class=\"token punctuation\">.</span>order_num <span class=\"token operator\">=</span> OI<span class=\"token punctuation\">.</span>order_num\n<span class=\"token operator\">AND</span> OI<span class=\"token punctuation\">.</span>prod_id <span class=\"token operator\">=</span> <span class=\"token string\">'RGAN01'</span></code></pre></div>\n<p>上面的 SQL 语句分别对三个表使用了别名</p>\n<h4>自联结（self-join）</h4>\n<p>现在有一个 Customers 表存储了客户信息，假如要给与 Jim Jones 为同一公司的所有顾客发送信息，那么首先要查出 Jim Jones 所在的公司，然后找出在此公司工作的所有顾客。</p>\n<p>先使用子查询语句实现</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> cust_id<span class=\"token punctuation\">,</span> cust_name<span class=\"token punctuation\">,</span> cust_contact\n<span class=\"token keyword\">FROM</span> Customers\n<span class=\"token keyword\">WHERE</span> cust_name <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">SELECT</span> cust_name\n                   <span class=\"token keyword\">FROM</span> Customers\n                   <span class=\"token keyword\">WHERE</span> cust_contact <span class=\"token operator\">=</span> <span class=\"token string\">'Jim Jones'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">1000000003</span><span class=\"token operator\">|</span>Fun4All<span class=\"token operator\">|</span>Jim Jones\n<span class=\"token number\">1000000004</span><span class=\"token operator\">|</span>Fun4All<span class=\"token operator\">|</span>Denise L<span class=\"token punctuation\">.</span> Stephens</code></pre></div>\n<p>上面的 SQL 使用了子查询，检索出 Jim Jones 所在的公司 cust_name，然后外部擦洗通过 WHERE 子句过滤出在此公司的所有顾客</p>\n<p>下面使用联结来实现同样的功能</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> C1<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">,</span> C1<span class=\"token punctuation\">.</span>cust_name<span class=\"token punctuation\">,</span> C1<span class=\"token punctuation\">.</span>cust_contact\n<span class=\"token keyword\">FROM</span> Customers <span class=\"token keyword\">AS</span> C1<span class=\"token punctuation\">,</span> Customers C2\n<span class=\"token keyword\">WHERE</span> C1<span class=\"token punctuation\">.</span>cust_name <span class=\"token operator\">=</span> C2<span class=\"token punctuation\">.</span>cust_name\n<span class=\"token operator\">AND</span> C2<span class=\"token punctuation\">.</span>cust_contact <span class=\"token operator\">=</span> <span class=\"token string\">'Jim Jones'</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">1000000003</span><span class=\"token operator\">|</span>Fun4All<span class=\"token operator\">|</span>Jim Jones\n<span class=\"token number\">1000000004</span><span class=\"token operator\">|</span>Fun4All<span class=\"token operator\">|</span>Denise L<span class=\"token punctuation\">.</span> Stephens</code></pre></div>\n<p>上面的查询语句使用了两个相同的表 Customers ，为了避免歧义对表使用了别名，分别为 C1，C2，SELECT 语句中必须使用 有 C1 前缀的全名。WHERE 子句中先使用 cust<em>name 进行联结，然后对 cust</em>contact 进行过滤</p>","frontmatter":{"title":"联结表（二）","date":"September 15, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-join-2/","previous":{"fields":{"slug":"/sql/sql-join-1/"},"frontmatter":{"title":"联结表（一）"}},"next":{"fields":{"slug":"/promise2/"},"frontmatter":{"title":""}}}}}