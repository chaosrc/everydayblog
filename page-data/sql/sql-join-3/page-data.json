{"componentChunkName":"component---src-templates-blog-post-js","path":"/sql/sql-join-3/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"d26c98b5-9bc4-5d4c-b026-43bf402c4414","excerpt":"…","html":"<h2>联结表（三）</h2>\n<h4>自然联结</h4>\n<p>无论何时对表进行联结，应该至少有一列不止出现在一个表中（被联结的列）。标准的联结返回所有的数据，相同的列可能出现多次。而自热联结排除多次出现，使每一列只返回一次</p>\n<h4>外联结</h4>\n<p>许多联结将一个表中的行与另一个表的行相关联，但是有时候需要包含没有关联的行。比如要对每个顾客的订单进行计数，并且包括那些没有下单的顾客，那么需要在订单表中关联表中没有的顾客，这种联结称为<strong>外联结</strong>。</p>\n<p>首先使用内联结，检索所有顾客及其订单</p>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> C<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">,</span> O<span class=\"token punctuation\">.</span>order_num\n<span class=\"token keyword\">FROM</span> Customers <span class=\"token keyword\">AS</span> C <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> Orders <span class=\"token keyword\">AS</span> O\n<span class=\"token keyword\">ON</span> O<span class=\"token punctuation\">.</span>cust_id <span class=\"token operator\">=</span> C<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">1000000001</span><span class=\"token operator\">|</span><span class=\"token number\">20005</span>\n<span class=\"token number\">1000000003</span><span class=\"token operator\">|</span><span class=\"token number\">20006</span>\n<span class=\"token number\">1000000004</span><span class=\"token operator\">|</span><span class=\"token number\">20007</span>\n<span class=\"token number\">1000000005</span><span class=\"token operator\">|</span><span class=\"token number\">20008</span>\n<span class=\"token number\">1000000001</span><span class=\"token operator\">|</span><span class=\"token number\">20009</span></code></pre></div>\n<p>再使用外联结，检索包括没有下单的顾客在内的所有顾客</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> C<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">,</span> O<span class=\"token punctuation\">.</span>order_num\n<span class=\"token keyword\">FROM</span> Customers <span class=\"token keyword\">AS</span> C <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> Orders <span class=\"token keyword\">AS</span> O\n<span class=\"token keyword\">ON</span> C<span class=\"token punctuation\">.</span>cust_id <span class=\"token operator\">=</span> O<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">1000000001</span><span class=\"token operator\">|</span><span class=\"token number\">20005</span>\n<span class=\"token number\">1000000001</span><span class=\"token operator\">|</span><span class=\"token number\">20009</span>\n<span class=\"token number\">1000000002</span><span class=\"token operator\">|</span>\n<span class=\"token number\">1000000003</span><span class=\"token operator\">|</span><span class=\"token number\">20006</span>\n<span class=\"token number\">1000000004</span><span class=\"token operator\">|</span><span class=\"token number\">20007</span>\n<span class=\"token number\">1000000005</span><span class=\"token operator\">|</span><span class=\"token number\">20008</span></code></pre></div>\n<p>与内联结语法类似，使用 OUTER JOIN 来指定联结类型，与内联结不同的是，外联结还包括没有关联的行。在使用 OUTER JOIN 是必须使用 RIGHT 或 LEFT关键词指定包括所有行的表（RIGHT指 OUTER JOIN 右边的表，LEFT 指 OUTER JOIN 左边的表），下图展示了内联结和外联结的关系</p>\n<p><img src=\"https://docs.trifacta.com/download/attachments/123830435/JoinVennDiagram.png?version=1&#x26;modificationDate=1532989599340&#x26;api=v2\"></p>\n<p>外联结还有一种全外联结（FULL OUTER JOIN）如上图所示，它检索关联的行以及两个表中所有为关联的行，部分数据库并不支持这种全外联结</p>\n<blockquote>\n<p>有些数据库中 LEFT OUTER JOIN 和 RIGHT OUTER JOIN，也可以写做 LEFT JOIN 和 RIGHT JOIN</p>\n</blockquote>\n<h4>使用带有聚集函数的联结</h4>\n<p>在联结表中也可以使用聚集函数，比如检索所有顾客以其订单数</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token keyword\">SELECT</span> C<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>O<span class=\"token punctuation\">.</span>order_num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num\n<span class=\"token keyword\">FROM</span> Customers <span class=\"token keyword\">AS</span> C <span class=\"token keyword\">INNER</span> <span class=\"token keyword\">JOIN</span> Orders <span class=\"token keyword\">AS</span> O\n<span class=\"token keyword\">ON</span> C<span class=\"token punctuation\">.</span>cust_id <span class=\"token operator\">=</span> O<span class=\"token punctuation\">.</span>cust_id\n<span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> C<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">1000000001</span><span class=\"token operator\">|</span><span class=\"token number\">2</span>\n<span class=\"token number\">1000000003</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\n<span class=\"token number\">1000000004</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\n<span class=\"token number\">1000000005</span><span class=\"token operator\">|</span><span class=\"token number\">1</span></code></pre></div>\n<p>使用 INNER JOIN 联结 Customers 和 Orders 表，对 cust_id 进行分组，聚集函数 COUNT() 计算每个顾客的订单数</p>\n<p>使用外联结进行计算</p>\n<p>输入</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"> <span class=\"token keyword\">SELECT</span> C<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">,</span> <span class=\"token function\">COUNT</span><span class=\"token punctuation\">(</span>O<span class=\"token punctuation\">.</span>order_num<span class=\"token punctuation\">)</span> <span class=\"token keyword\">AS</span> num\n <span class=\"token keyword\">FROM</span> Customers <span class=\"token keyword\">AS</span> C <span class=\"token keyword\">LEFT</span> <span class=\"token keyword\">OUTER</span> <span class=\"token keyword\">JOIN</span> Orders <span class=\"token keyword\">AS</span> O\n <span class=\"token keyword\">ON</span> C<span class=\"token punctuation\">.</span>cust_id <span class=\"token operator\">=</span> O<span class=\"token punctuation\">.</span>cust_id\n <span class=\"token keyword\">GROUP</span> <span class=\"token keyword\">BY</span> C<span class=\"token punctuation\">.</span>cust_id<span class=\"token punctuation\">;</span></code></pre></div>\n<p>输出</p>\n<div class=\"gatsby-highlight\" data-language=\"sql\"><pre class=\"language-sql\"><code class=\"language-sql\"><span class=\"token number\">1000000001</span><span class=\"token operator\">|</span><span class=\"token number\">2</span>\n<span class=\"token number\">1000000002</span><span class=\"token operator\">|</span><span class=\"token number\">0</span>\n<span class=\"token number\">1000000003</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\n<span class=\"token number\">1000000004</span><span class=\"token operator\">|</span><span class=\"token number\">1</span>\n<span class=\"token number\">1000000005</span><span class=\"token operator\">|</span><span class=\"token number\">1</span></code></pre></div>\n<p>使用左外部联结包含了没有下单的顾客，其订单数为 0</p>","frontmatter":{"title":"联结表（三）","date":"September 16, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/sql/sql-join-3/","previous":{"fields":{"slug":"/sql/sql-join-2/"},"frontmatter":{"title":"联结表（二）"}},"next":{"fields":{"slug":"/sql/sql-union-1/"},"frontmatter":{"title":"组合查询（一）"}}}}}