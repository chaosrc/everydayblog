{"componentChunkName":"component---src-templates-blog-post-js","path":"/test/nodejs-cypress-core/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"f9c72f56-56ff-5026-942e-e8de6bda18a7","excerpt":"Cypress 测试框架的核心概念查询元素类似于 jQuery 的选择器, 但是不会同步返回元素，比如:Cypress 里面不会直接返回元素，而是会包装一层重试和超时逻辑，使用 .then 方法异步获取元素设置超时当查找的元素不存在时，cypress 不会马上失败，而是会等待一个超时时间后报错, 如下设置1…","html":"<h2>Cypress 测试框架的核心概念</h2>\n<h4>查询元素</h4>\n<p>类似于 jQuery 的选择器, 但是不会同步返回元素，比如:</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token comment\">// jQuery</span>\n<span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span>\n<span class=\"token comment\">// Cypress</span>\n<span class=\"token keyword\">let</span> el <span class=\"token operator\">=</span> cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>Cypress 里面不会直接返回元素，而是会包装一层重试和超时逻辑，使用 .then 方法异步获取元素</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'input'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">el</span> <span class=\"token operator\">=></span> console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span>el<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>设置超时</h4>\n<p>当查找的元素不存在时，cypress 不会马上失败，而是会等待一个超时时间后报错, 如下设置10秒的超时：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.name'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>timeout<span class=\"token punctuation\">:</span> <span class=\"token number\">100000</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>默认的超时时间为4秒</p>\n<h4>与元素的互交</h4>\n<p>cypress 中提供了以下与元素互交的方法:</p>\n<ul>\n<li>.type() 输入 input 元素的值</li>\n<li>.blur() 使元素失去焦点</li>\n<li>.focus() 使元素聚焦</li>\n<li>.clear() 清除 input 或者 textarea 的值</li>\n<li>.check() 选择 checkbox</li>\n<li>.uncheck() 取消 checkbox 选择</li>\n<li>.select() 选择 option</li>\n<li>.dbclick() 双击元素</li>\n</ul>\n<p>通过链式调用与元素互交</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'textarea.post'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token string\">'hello'</span><span class=\"token punctuation\">)</span>\n\ncy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.btn'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<h4>设置别名</h4>\n<p>Cypress 提供了一个功能可以快速获取之前以及选择过的元素，如下：</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\">cy\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.my-selector'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">as</span><span class=\"token punctuation\">(</span><span class=\"token string\">'myElement'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">// 设置别名</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\ncy\n  <span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'@myElement'</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>通过 as 方法设置别名，后面可以通过别名来获取元素，可以复用之前的选择</p>\n<h4>异步执行命令</h4>\n<p>一个非常重要的理解是 Cypress 命令在调用的时候不会立即执行，而是将它们储存在队列中稍后运行，因此Cypress 命令是异步执行的</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token function\">it</span><span class=\"token punctuation\">(</span><span class=\"token string\">'changes the URL when \"awesome\" is clicked'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">visit</span><span class=\"token punctuation\">(</span><span class=\"token string\">'/my/resource/path'</span><span class=\"token punctuation\">)</span> \n\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.awesome-selector'</span><span class=\"token punctuation\">)</span>  \n    <span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   \n\n  cy<span class=\"token punctuation\">.</span><span class=\"token function\">url</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>               \n    <span class=\"token punctuation\">.</span><span class=\"token function\">should</span><span class=\"token punctuation\">(</span><span class=\"token string\">'include'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'/my/resource/path#awesomeness'</span><span class=\"token punctuation\">)</span> \n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>当 it 方法执行完成后才会依次执行上面的每一个命令</p>","frontmatter":{"title":"Cypress 测试框架的核心概念","date":"August 01, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/test/nodejs-cypress-core/","previous":{"fields":{"slug":"/test/nodejs-cypress/"},"frontmatter":{"title":"Node.js 端到端测试框架 Cypress"}},"next":{"fields":{"slug":"/deploy/nodejs-deploy/"},"frontmatter":{"title":"Node.js 程序的运维与部署"}}}}}