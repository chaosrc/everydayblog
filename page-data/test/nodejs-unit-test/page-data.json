{"componentChunkName":"component---src-templates-blog-post-js","path":"/test/nodejs-unit-test/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"1b6b6ed3-e52d-58ff-af89-b1596638c172","excerpt":"Node.js 单元测试Node.js 自带了 assert 模块，是大多数单元测试的基础，很多第三方测试框架都用到了 assert 模块。先定义一个简单的待办事项程序（ Todo ） 程序，然后使用 assert 模块对代码进行单元测试定义 Todo 程序在构造器  中初始化 Todo…","html":"<h2>Node.js 单元测试</h2>\n<p>Node.js 自带了 assert 模块，是大多数单元测试的基础，很多第三方测试框架都用到了 assert 模块。</p>\n<p>先定义一个简单的待办事项程序（ Todo ） 程序，然后使用 assert 模块对代码进行单元测试</p>\n<h4>定义 Todo 程序</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">class</span> <span class=\"token class-name\">Todo</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">constructor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> \n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>item<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'参数为空'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>item<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n    \n    <span class=\"token function\">deleteAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todos <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">count</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length\n    <span class=\"token punctuation\">}</span>\n\n    <span class=\"token function\">doAsync</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span>cb<span class=\"token punctuation\">,</span> <span class=\"token number\">2000</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> Todo</code></pre></div>\n<p>在构造器 <code class=\"language-text\">constructor</code> 中初始化 Todo，<code class=\"language-text\">add</code> 方法添加代办事项，如果为空则抛出异常，<code class=\"language-text\">deleteAll</code> 方法清空所有代办事项，<code class=\"language-text\">count</code> 方法计算待办事项的数量，<code class=\"language-text\">doAsync</code> 方法异步执行回调, 2 秒后调用 cb 方法并传人 true</p>\n<p>引入测试模块，创建 Todo</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> assert <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'assert'</span><span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">const</span> Todo <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./Todo'</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">const</span> todos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Todo</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">let</span> passCount <span class=\"token operator\">=</span> <span class=\"token number\">0</span></code></pre></div>\n<h4>测试删除功能</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">testDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    todo<span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span><span class=\"token string\">'first item'</span><span class=\"token punctuation\">)</span>\n    assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Todo 中存在一条待办事项'</span><span class=\"token punctuation\">)</span>\n    todo<span class=\"token punctuation\">.</span><span class=\"token function\">deleteAll</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    assert<span class=\"token punctuation\">.</span><span class=\"token function\">equal</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>todos<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'待办事项为空'</span><span class=\"token punctuation\">)</span>\n    passCount <span class=\"token operator\">++</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>先添加一个待办事项，使用 assert.equal 方法来比较 todo 对象中的 todos 的长度是否为 1，如果不为1，则会抛出异常，deleteAll 方法删除所有待办事项后 todos的长度应为 0</p>\n<h4>测试异步调用</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">asyncTest</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">cb</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    todo<span class=\"token punctuation\">.</span><span class=\"token function\">doAsync</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">value</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        assert<span class=\"token punctuation\">.</span><span class=\"token function\">ok</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> <span class=\"token string\">'异步回调执行'</span><span class=\"token punctuation\">)</span>\n        passCount<span class=\"token operator\">++</span>\n        <span class=\"token function\">cb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>调用 doAsync 方法，回调中执行 assert.ok 断言传人的值为 true</p>\n<h4>测试异常是否抛出</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">throwTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    assert<span class=\"token punctuation\">.</span><span class=\"token function\">throws</span><span class=\"token punctuation\">(</span>todo<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">,</span> <span class=\"token regex\">/空/</span><span class=\"token punctuation\">)</span> \n    passCount<span class=\"token operator\">++</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>assert.throws 方法可以检查测序是否抛出错误，第二参数是正则表达式，用来匹配错误信息中的关键词</p>\n<h4>运行测试</h4>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">function</span> <span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">testDelete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">throwTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token function\">asyncTest</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pass count'</span><span class=\"token punctuation\">,</span> passCount<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token function\">start</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 输出：pass count 3</span></code></pre></div>","frontmatter":{"title":"Node.js 单元测试","date":"July 27, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/test/nodejs-unit-test/","previous":{"fields":{"slug":"/database/leveldb/"},"frontmatter":{"title":"嵌入式数据库 LevelDB"}},"next":{"fields":{"slug":"/test/nodejs-mocha/"},"frontmatter":{"title":"Node.js 测试框架 Mocha"}}}}}