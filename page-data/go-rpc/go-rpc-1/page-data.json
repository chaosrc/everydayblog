{"componentChunkName":"component---src-templates-blog-post-js","path":"/go-rpc/go-rpc-1/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"6743f979-dab2-54e2-a2df-6cb2180a2a56","excerpt":"Go RPC (一)RPC 是远程过程调用的简称，是分布式系统节点之间的一种交流方式。Go 标准库中提供了一个简单的 RPC 实现。RPC 版 “Hello world“创建 HelloService 类型Hello 方法必须满足 Go 中 RPC 规则：接收两个序列化参数，第二个为指针类型，并且返回一个 error…","html":"<h2>Go RPC (一)</h2>\n<p>RPC 是远程过程调用的简称，是分布式系统节点之间的一种交流方式。Go 标准库中提供了一个简单的 RPC 实现。</p>\n<h4>RPC 版 “Hello world“</h4>\n<p>创建 HelloService 类型</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> HelloService <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>h <span class=\"token operator\">*</span>HelloService<span class=\"token punctuation\">)</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span>request <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> response <span class=\"token operator\">*</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token operator\">*</span>response <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello: \"</span> <span class=\"token operator\">+</span> request\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>Hello 方法必须满足 Go 中 RPC 规则：接收两个序列化参数，第二个为指针类型，并且返回一个 error 类型。</p>\n<p>注册 RPC 服务</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"log\"</span>\n\t<span class=\"token string\">\"net\"</span>\n\t<span class=\"token string\">\"net/rpc\"</span>\n<span class=\"token punctuation\">)</span>\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\trpc<span class=\"token punctuation\">.</span><span class=\"token function\">RegisterName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HelloService\"</span><span class=\"token punctuation\">,</span> <span class=\"token function\">new</span><span class=\"token punctuation\">(</span>HelloService<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n\tlistener<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> net<span class=\"token punctuation\">.</span><span class=\"token function\">Listen</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\":9999\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\tconn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> listener<span class=\"token punctuation\">.</span><span class=\"token function\">Accept</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\trpc<span class=\"token punctuation\">.</span><span class=\"token function\">ServeConn</span><span class=\"token punctuation\">(</span>conn<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>RegisterName 方法会将所有满足 RPC 规则的函数注册到 “HelloService” 服务空间下。</p>\n<p>创建客户端请求</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\t<span class=\"token string\">\"fmt\"</span>\n\t<span class=\"token string\">\"log\"</span>\n\t<span class=\"token string\">\"net/rpc\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tclient<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> rpc<span class=\"token punctuation\">.</span><span class=\"token function\">Dial</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"tcp\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\":9999\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">var</span> response <span class=\"token builtin\">string</span>\n\terr <span class=\"token operator\">=</span> client<span class=\"token punctuation\">.</span><span class=\"token function\">Call</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"HelloService.Hello\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"world\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>response<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\tlog<span class=\"token punctuation\">.</span><span class=\"token function\">Fatal</span><span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n    fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>response<span class=\"token punctuation\">)</span> <span class=\"token comment\">//Hello: world</span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Go RPC (一)","date":"December 20, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go-rpc/go-rpc-1/","previous":{"fields":{"slug":"/go-example/go-example.4/"},"frontmatter":{"title":"Go 实战（四）"}},"next":{"fields":{"slug":"/go-rpc/go-rpc-2/"},"frontmatter":{"title":"Go rpc (二)"}}}}}