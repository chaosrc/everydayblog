{"componentChunkName":"component---src-templates-blog-post-js","path":"/go-rpc/go-rpc-8/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"c3d26991-86a1-5c7d-9f7f-5348157b59e3","excerpt":"Go RCP (八)Token 认证gRPC 为每个 gRPC 方法的调用提供了认证支持，可以基于用户 Token 对不同的方法访问进行权限控制。要实现对每个 gRPC 方法的认证，需要实现 grpc.PerRPCCredentials 接口：GetRequestMetadata…","html":"<h2>Go RCP (八)</h2>\n<h4>Token 认证</h4>\n<p>gRPC 为每个 gRPC 方法的调用提供了认证支持，可以基于用户 Token 对不同的方法访问进行权限控制。</p>\n<p>要实现对每个 gRPC 方法的认证，需要实现 grpc.PerRPCCredentials 接口：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> PerRPCCredentials <span class=\"token keyword\">interface</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token function\">GetRequestMetadata</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> uri <span class=\"token operator\">...</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token function\">RequireTransportSecurity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>GetRequestMetadata 方法返回当前请求的认证信息。RequireTransportSecurity 方法表示是否要求底层使用安全协议</p>\n<p>创建一个 Authentication 类型，用于实现用户名和秘密验证：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">type</span> Authentication <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tUser     <span class=\"token builtin\">string</span>\n\tPassword <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>auth <span class=\"token operator\">*</span>Authentication<span class=\"token punctuation\">)</span> <span class=\"token function\">GetRequestMetadata</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> uri <span class=\"token operator\">...</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">:</span> auth<span class=\"token punctuation\">.</span>User<span class=\"token punctuation\">,</span> <span class=\"token string\">\"password\"</span><span class=\"token punctuation\">:</span> auth<span class=\"token punctuation\">.</span>Password<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>auth <span class=\"token operator\">*</span>Authentication<span class=\"token punctuation\">)</span> <span class=\"token function\">RequireTransportSecurity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">bool</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">false</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>客户端每次请求时将 Token 信息做为参数选项传人：</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\">auth <span class=\"token operator\">:=</span> Authentication<span class=\"token punctuation\">{</span>\n\tUser<span class=\"token punctuation\">:</span>     <span class=\"token string\">\"foo\"</span><span class=\"token punctuation\">,</span>\n\tPassword<span class=\"token punctuation\">:</span> <span class=\"token string\">\"123456\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\nconn<span class=\"token punctuation\">,</span> err <span class=\"token operator\">:=</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">Dial</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"localhost:8003\"</span><span class=\"token punctuation\">,</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">WithInsecure</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">WithPerRPCCredentials</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>auth<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>服务端每个方法中通过 Authentication 中的 Auth 方法进行身份认证</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>service <span class=\"token operator\">*</span>HelloServiceImp<span class=\"token punctuation\">)</span> <span class=\"token function\">Hello</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">,</span> request <span class=\"token operator\">*</span>hello<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>hello<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">,</span> <span class=\"token builtin\">error</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">if</span> err <span class=\"token operator\">:=</span> service<span class=\"token punctuation\">.</span>auth<span class=\"token punctuation\">.</span><span class=\"token function\">Auth</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> err <span class=\"token operator\">!=</span> <span class=\"token boolean\">nil</span> <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span><span class=\"token punctuation\">,</span> err\n\t<span class=\"token punctuation\">}</span>\n\n\tvalue <span class=\"token operator\">:=</span> <span class=\"token string\">\"Hello \"</span> <span class=\"token operator\">+</span> request<span class=\"token punctuation\">.</span><span class=\"token function\">GetValue</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token operator\">&amp;</span>hello<span class=\"token punctuation\">.</span>String<span class=\"token punctuation\">{</span>Value<span class=\"token punctuation\">:</span> value<span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>auth <span class=\"token operator\">*</span>Authentication<span class=\"token punctuation\">)</span> <span class=\"token function\">Auth</span><span class=\"token punctuation\">(</span>ctx context<span class=\"token punctuation\">.</span>Context<span class=\"token punctuation\">)</span> <span class=\"token builtin\">error</span> <span class=\"token punctuation\">{</span>\n\tmd<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> metadata<span class=\"token punctuation\">.</span><span class=\"token function\">FromIncomingContext</span><span class=\"token punctuation\">(</span>ctx<span class=\"token punctuation\">)</span>\n\t<span class=\"token keyword\">if</span> <span class=\"token operator\">!</span>ok <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> fmt<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"missing credentials\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">var</span> appkey <span class=\"token builtin\">string</span>\n\t<span class=\"token keyword\">var</span> appid <span class=\"token builtin\">string</span>\n\n\t<span class=\"token keyword\">if</span> val<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> md<span class=\"token punctuation\">[</span><span class=\"token string\">\"user\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">{</span>\n\t\tappid <span class=\"token operator\">=</span> val<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span>\n\t<span class=\"token keyword\">if</span> val<span class=\"token punctuation\">,</span> ok <span class=\"token operator\">:=</span> md<span class=\"token punctuation\">[</span><span class=\"token string\">\"password\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> ok <span class=\"token punctuation\">{</span>\n\t\tappkey <span class=\"token operator\">=</span> val<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">if</span> appid <span class=\"token operator\">!=</span> auth<span class=\"token punctuation\">.</span>User <span class=\"token operator\">||</span> appkey <span class=\"token operator\">!=</span> auth<span class=\"token punctuation\">.</span>Password <span class=\"token punctuation\">{</span>\n\t\t<span class=\"token keyword\">return</span> grpc<span class=\"token punctuation\">.</span><span class=\"token function\">Errorf</span><span class=\"token punctuation\">(</span>codes<span class=\"token punctuation\">.</span>Unauthenticated<span class=\"token punctuation\">,</span> <span class=\"token string\">\"invalid token\"</span><span class=\"token punctuation\">)</span>\n\t<span class=\"token punctuation\">}</span>\n\n\t<span class=\"token keyword\">return</span> <span class=\"token boolean\">nil</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>详细的认证方法在 Auth 方法中完成。metadata.FromIncomingContext 方法可以获取到上下文中的元信息。</p>","frontmatter":{"title":"Go RCP (八)","date":"December 27, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go-rpc/go-rpc-8/","previous":{"fields":{"slug":"/go-rpc/go-rpc-7/"},"frontmatter":{"title":"Go RCP (七)"}},"next":{"fields":{"slug":"/go-distribute/go-distribute-1/"},"frontmatter":{"title":"分布式 ID 生成器"}}}}}