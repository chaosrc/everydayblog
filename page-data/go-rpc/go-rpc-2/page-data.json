{"componentChunkName":"component---src-templates-blog-post-js","path":"/go-rpc/go-rpc-2/","webpackCompilationHash":"244ee56c36e36966767c","result":{"data":{"site":{"siteMetadata":{"title":"温故而知新","author":"chao"}},"markdownRemark":{"id":"442d9b4c-6b3b-586e-915f-725d6534b2a9","excerpt":"Go rpc (二) ：ProtobufProtobuf 是 Protocal Buffers 的简称，是一个高效、灵活、带有自动序列化机制的数据语言，定位类似于 XML、JSON等描述语言。安装安装 protobuf \nhttps://github.com/protocolbuffers/protobuf…","html":"<h2>Go rpc (二) ：Protobuf</h2>\n<p>Protobuf 是 Protocal Buffers 的简称，是一个高效、灵活、带有自动序列化机制的数据语言，定位类似于 XML、JSON等描述语言。</p>\n<h4>安装</h4>\n<ul>\n<li>\n<p>安装 protobuf\n<a href=\"https://github.com/protocolbuffers/protobuf/releases\">https://github.com/protocolbuffers/protobuf/releases</a></p>\n</li>\n<li>\n<p>安装 Go 插件</p>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">go get -u github.com/golang/protobuf/protoc-gen-go</code></pre></div>\n</li>\n</ul>\n<h4>在 .proto 文件中定义类型</h4>\n<p>Protobuf 中的基本单元为 message，类似于 Go 中的 struct，在 message 中可以定义基础类型字段或者嵌套其他 message</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> message<span class=\"token punctuation\">;</span>\nmessage Person <span class=\"token punctuation\">{</span>\n  required <span class=\"token builtin\">string</span> name <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n  required <span class=\"token builtin\">int32</span> id <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  optional <span class=\"token builtin\">string</span> email <span class=\"token operator\">=</span> <span class=\"token number\">3</span><span class=\"token punctuation\">;</span>\n\n  enum PhoneType <span class=\"token punctuation\">{</span>\n    MOBILE <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\n    HOME <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    WORK <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  message PhoneNumber <span class=\"token punctuation\">{</span>\n    required <span class=\"token builtin\">string</span> number <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\n    optional PhoneType <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span> <span class=\"token punctuation\">[</span><span class=\"token keyword\">default</span> <span class=\"token operator\">=</span> HOME<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n\n  repeated PhoneNumber phone <span class=\"token operator\">=</span> <span class=\"token number\">4</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h4>生成类型文件</h4>\n<div class=\"gatsby-highlight\" data-language=\"shell\"><pre class=\"language-shell\"><code class=\"language-shell\">protoc --go_out<span class=\"token operator\">=</span>. *.proto</code></pre></div>\n<p>生成一个 message.pb.go 文件，包含 .proto 中定义的类型</p>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">package</span> message\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">(</span>\n\tfmt <span class=\"token string\">\"fmt\"</span>\n\tproto <span class=\"token string\">\"github.com/golang/protobuf/proto\"</span>\n\tmath <span class=\"token string\">\"math\"</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">type</span> Person_PhoneType <span class=\"token builtin\">int32</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token punctuation\">(</span>\n\tPerson_MOBILE Person_PhoneType <span class=\"token operator\">=</span> <span class=\"token number\">0</span>\n\tPerson_HOME   Person_PhoneType <span class=\"token operator\">=</span> <span class=\"token number\">1</span>\n\tPerson_WORK   Person_PhoneType <span class=\"token operator\">=</span> <span class=\"token number\">2</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">var</span> Person_PhoneType_name <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token number\">0</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"MOBILE\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"HOME\"</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token number\">2</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"WORK\"</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">var</span> Person_PhoneType_value <span class=\"token operator\">=</span> <span class=\"token keyword\">map</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int32</span><span class=\"token punctuation\">{</span>\n\t<span class=\"token string\">\"MOBILE\"</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"HOME\"</span><span class=\"token punctuation\">:</span>   <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n\t<span class=\"token string\">\"WORK\"</span><span class=\"token punctuation\">:</span>   <span class=\"token number\">2</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token operator\">...</span><span class=\"token punctuation\">.</span>\n\n<span class=\"token keyword\">type</span> Person <span class=\"token keyword\">struct</span> <span class=\"token punctuation\">{</span>\n\tName                 <span class=\"token operator\">*</span><span class=\"token builtin\">string</span>               <span class=\"token string\">`protobuf:\"bytes,1,req,name=name\" json:\"name,omitempty\"`</span>\n\tId                   <span class=\"token operator\">*</span><span class=\"token builtin\">int32</span>                <span class=\"token string\">`protobuf:\"varint,2,req,name=id\" json:\"id,omitempty\"`</span>\n\tEmail                <span class=\"token operator\">*</span><span class=\"token builtin\">string</span>               <span class=\"token string\">`protobuf:\"bytes,3,opt,name=email\" json:\"email,omitempty\"`</span>\n\tPhone                <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>Person_PhoneNumber <span class=\"token string\">`protobuf:\"bytes,4,rep,name=phone\" json:\"phone,omitempty\"`</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Person<span class=\"token punctuation\">)</span> <span class=\"token function\">Reset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>         <span class=\"token punctuation\">{</span> <span class=\"token operator\">*</span>m <span class=\"token operator\">=</span> Person<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span>Person<span class=\"token punctuation\">)</span> <span class=\"token function\">String</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token builtin\">string</span> <span class=\"token punctuation\">{</span> <span class=\"token keyword\">return</span> proto<span class=\"token punctuation\">.</span><span class=\"token function\">CompactTextString</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Person<span class=\"token punctuation\">)</span> <span class=\"token function\">ProtoMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>    <span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n<span class=\"token keyword\">func</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>Person<span class=\"token punctuation\">)</span> <span class=\"token function\">Descriptor</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">byte</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\t<span class=\"token keyword\">return</span> fileDescriptor_33c57e4bae7b9afd<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">{</span><span class=\"token number\">0</span><span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">...</span></code></pre></div>\n<h4>使用</h4>\n<div class=\"gatsby-highlight\" data-language=\"go\"><pre class=\"language-go\"><code class=\"language-go\"><span class=\"token keyword\">func</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n\tname <span class=\"token operator\">:=</span> <span class=\"token string\">\"John\"</span>\n\tid <span class=\"token operator\">:=</span> <span class=\"token function\">int32</span><span class=\"token punctuation\">(</span><span class=\"token number\">1234</span><span class=\"token punctuation\">)</span>\n\temail <span class=\"token operator\">:=</span> <span class=\"token string\">\"123456@qq.com\"</span>\n\tperson <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">.</span>Person<span class=\"token punctuation\">{</span>\n\t\tName<span class=\"token punctuation\">:</span>  <span class=\"token operator\">&amp;</span>name<span class=\"token punctuation\">,</span>\n\t\tId<span class=\"token punctuation\">:</span>    <span class=\"token operator\">&amp;</span>id<span class=\"token punctuation\">,</span>\n\t\tEmail<span class=\"token punctuation\">:</span> <span class=\"token operator\">&amp;</span>email<span class=\"token punctuation\">,</span>\n\t<span class=\"token punctuation\">}</span>\n\n\tperson2 <span class=\"token operator\">:=</span> <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">.</span>Person<span class=\"token punctuation\">{</span><span class=\"token punctuation\">}</span>\n\tdata<span class=\"token punctuation\">,</span> <span class=\"token boolean\">_</span> <span class=\"token operator\">:=</span> proto<span class=\"token punctuation\">.</span><span class=\"token function\">Marshal</span><span class=\"token punctuation\">(</span>person<span class=\"token punctuation\">)</span>\n\tproto<span class=\"token punctuation\">.</span><span class=\"token function\">Unmarshal</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> person2<span class=\"token punctuation\">)</span>\n\n\tfmt<span class=\"token punctuation\">.</span><span class=\"token function\">Println</span><span class=\"token punctuation\">(</span>person2<span class=\"token punctuation\">)</span> <span class=\"token comment\">// name:\"John\" id:1234 email:\"123456@qq.com\" </span>\n<span class=\"token punctuation\">}</span></code></pre></div>","frontmatter":{"title":"Go rpc (二)","date":"December 21, 2019","description":null}}},"pageContext":{"isCreatedByStatefulCreatePages":false,"slug":"/go-rpc/go-rpc-2/","previous":{"fields":{"slug":"/go-rpc/go-rpc-1/"},"frontmatter":{"title":"Go RPC (一)"}},"next":{"fields":{"slug":"/go-rpc/go-rpc-3/"},"frontmatter":{"title":"Go RPC (三)"}}}}}